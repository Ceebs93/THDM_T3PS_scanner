! This file is part of SusHi.
! 
! It includes the routines, which combine the various contributions
! to the virtual amplitude in gluon fusion. The quark-gluon contributions
! for scalars and pseudoscalars are added afterwards.
! 
C-{{{ NLO virtual corrections to gg -> h

!The following routine determines the virtual corrections at NLO
!to gluon fusion. It includes the quark-gluon, squark, squark-gluon
!and squark-quark-gluino diagrams partially in reasonable expansions.

      function c_virt()
      implicit none
      double precision c_virt,taut,taub,taubyuk,tauc,taubp,tautp,
     &taub1,taub2,taubsb,Mgltmp
      double complex sum1,sum2,bsm(3),sum11,sum12
      double complex B1SM,B1SMA,AMPLOeff,
     &B1SUSYDS,B2SMA,B3SMh,B3SMA !,B1SUSYRH,B2SUSYh
      logical evalcsusyflag

      include '../commons/common-consts.f'
      include '../commons/common-vars.f'
      include '../commons/common-quark.f'
      include '../commons/common-int.f'
      include '../commons/common-ren.f'
      include '../commons/common-inputoutput.f'
      include '../commons/common-citations.f'

      !determine whether to use evalcsusy (true) or an expansion
      !in heavy SUSY masses by Degrassi,Slavich,Di Vita (false)
      !for stop contributions by using evalcsusyflag

      !Use evalcsusy only for lightest MSSM Higgs
      if ((pseudo.eq.0).and.(Sind.eq.1).and.(model.eq.1)) then
         evalcsusyflag = .true.
      else
         evalcsusyflag = .false.
      end if

      tauc = mh2/mc2/4.d0
      taub = mh2/mb2/4.d0
      taubyuk = mh2/mbyuk**2/4.d0
      taut = mh2/mt2/4.d0
      taubp = mh2/mbp2/4.d0
      tautp = mh2/mtp2/4.d0
      taub1 = mh2/msb12/4.d0
      taub2 = mh2/msb22/4.d0
      taubsb = mh2/mbsb2/4.d0

      if (pseudo.eq.1) then
      !pseudoscalar Higgs

         !quark-gluon contributions
         sum1 = gc* B1SMA(tauc)
     &        + gb*(B1SMA(taub)-B2SMA(taub) * dmb(1)
     &                         -B3SMA(taub) * dgb)
     &        + gbp*B1SMA(taubp)
     &        + gtp*B1SMA(tautp)
     &        + c5sp(1,1)*2.d0 !NLO coefficient of dim5 operator, for C_t = 3*2

         !top-gluon contributions, heavy top limit possible
         if (htl) then
            sum1 = sum1 + gt*6.d0
         else
            sum1 = sum1 + gt*B1SMA(taut)
         endif

      else
      !SM, light or heavy MSSM Higgs

         call B2SMh(taub,bsm)

         !quark-gluon contributions
         sum1 = gc*B1SM(tauc)
     &        + gb*(B1SM(taub)!-B2SMh(taub) * dmb
     &                        -bsm(1)*dmb(3)
     &                        -bsm(2)*dmb(2)-bsm(3)*dmb(1)
     &                        -B3SMh(taub) * dgb)
     &        + gbp*B1SM(taubp)+gtp*B1SM(tautp)
     &        + c5sp(0,1)*2.d0 !NLO coefficient of dim5 operator, for C_t = 11/4*2

         !top-gluon contributions, heavy top limit possible
         if (htl) then
            sum1 = sum1 + gt*5.5d0
         else
            sum1 = sum1 + gt*B1SM(taut)
         endif

      endif

      if ((model.eq.1).or.(model.eq.3)) then
      !SUSY contributions

         !stop contributions: evalcsusy - only used in the MSSM
         if (evalcsusyflag.eqv.(.true.)) then
            citations(50) = 1
            citations(51) = 1
            citations(52) = 1
            if (pseudo.eq.1) then
                citations(53) = 1
                !pay attention to different normalization in pseudoscalar sector
                sum1 = sum1 + 3/2.d0*2*(gte2 + gtpe2 + gbpe2)
            else
                sum1 = sum1 + 2*(gte2 + gtpe2 + gbpe2)
            end if
         end if

         !sbottom contributions: use approach from Degrassi, Slavich - NMSSM added

            citations(13) = 1
            citations(14) = 1
            citations(15) = 1

            sum11 = (0.d0,0.d0)
            sum12 = (0.d0,0.d0)

            if (evalcsusyflag.eqv.(.true.)) then
               sum11 = B1SUSYDS(mt2,mb2,mbsb2,mbmb,mbyuk,mh2,mgl
     &           ,beta,muSUSY,GF,lam,delta_mb,mw,mz
     &           ,Ab,msb12,msb22,s2thetab,c2thetab
     &           ,At,mst12,mst22,s2thetat,c2thetat
     &           ,Hmx,Amx
     &           ,tanbresum,mbrunyuk,yukfac,muRggh
     &           ,dmsb1,dmsb2,dthetab,dmbsb,dAbds
     &           ,0.d0,1.d0,pseudo,Sind)
            else
               sum11 = B1SUSYDS(mt2,mb2,mbsb2,mbmb,mbyuk,mh2,mgl
     &           ,beta,muSUSY,GF,lam,delta_mb,mw,mz
     &           ,Ab,msb12,msb22,s2thetab,c2thetab
     &           ,At,mst12,mst22,s2thetat,c2thetat
     &           ,Hmx,Amx
     &           ,tanbresum,mbrunyuk,yukfac,muRggh
     &           ,dmsb1,dmsb2,dthetab,dmbsb,dAbds
     &           ,1.d0,1.d0,pseudo,Sind)
            end if

            !secure interpolation for very high SUSY masses and gluino mass
            !thus relatively close to squark masses
            if ((Abs((msb12/Mgl**2)-1.d0).Le.(0.01d0)).or.
     &         (Abs((msb22/Mgl**2)-1.d0).Le.(0.01d0)).or.
     &         (Abs((mst12/Mgl**2)-1.d0).Le.(0.01d0)).or.
     &         (Abs((mst22/Mgl**2)-1.d0).Le.(0.01d0))) then
            Mgltmp = Mgl
            Mgl = Mgl * (1.d0+0.15d0)
            if (evalcsusyflag.eqv.(.true.)) then
               sum11 = B1SUSYDS(mt2,mb2,mbsb2,mbmb,mbyuk,mh2,mgl
     &           ,beta,muSUSY,GF,lam,delta_mb,mw,mz
     &           ,Ab,msb12,msb22,s2thetab,c2thetab
     &           ,At,mst12,mst22,s2thetat,c2thetat
     &           ,Hmx,Amx
     &           ,tanbresum,mbrunyuk,yukfac,muRggh
     &           ,dmsb1,dmsb2,dthetab,dmbsb,dAbds
     &           ,0.d0,1.d0,pseudo,Sind)/2.d0
            else
               sum11 = B1SUSYDS(mt2,mb2,mbsb2,mbmb,mbyuk,mh2,mgl
     &           ,beta,muSUSY,GF,lam,delta_mb,mw,mz
     &           ,Ab,msb12,msb22,s2thetab,c2thetab
     &           ,At,mst12,mst22,s2thetat,c2thetat
     &           ,Hmx,Amx
     &           ,tanbresum,mbrunyuk,yukfac,muRggh
     &           ,dmsb1,dmsb2,dthetab,dmbsb,dAbds
     &           ,1.d0,1.d0,pseudo,Sind)/2.d0
            end if
            Mgl = Mgltmp
            Mgl = Mgl * (1.d0-0.15d0)
            if (evalcsusyflag.eqv.(.true.)) then
               sum12 = B1SUSYDS(mt2,mb2,mbsb2,mbmb,mbyuk,mh2,mgl
     &           ,beta,muSUSY,GF,lam,delta_mb,mw,mz
     &           ,Ab,msb12,msb22,s2thetab,c2thetab
     &           ,At,mst12,mst22,s2thetat,c2thetat
     &           ,Hmx,Amx
     &           ,tanbresum,mbrunyuk,yukfac,muRggh
     &           ,dmsb1,dmsb2,dthetab,dmbsb,dAbds
     &           ,0.d0,1.d0,pseudo,Sind)/2.d0
            else
               sum12 = B1SUSYDS(mt2,mb2,mbsb2,mbmb,mbyuk,mh2,mgl
     &           ,beta,muSUSY,GF,lam,delta_mb,mw,mz
     &           ,Ab,msb12,msb22,s2thetab,c2thetab
     &           ,At,mst12,mst22,s2thetat,c2thetat
     &           ,Hmx,Amx
     &           ,tanbresum,mbrunyuk,yukfac,muRggh
     &           ,dmsb1,dmsb2,dthetab,dmbsb,dAbds
     &           ,1.d0,1.d0,pseudo,Sind)/2.d0
            end if
            Mgl = Mgltmp
            end if

            !rescue NaN values for degenerate spectra
            if ((yukfac(6).eq.(0.d0)).and.(yukfac(7).eq.(0.d0))) then
            sum11 = (0.d0,0.d0)
            sum12 = (0.d0,0.d0)
            end if

            sum1 = sum1 + sum11 + sum12

      endif

      sum2 = AMPLOeff(mh2)
      c_virt = Real(sum1/sum2)

      end

C-}}}
C-{{{ Electroweak contributions by light quarks

      subroutine elw_lq()
      implicit none
      double precision AMPLO,sintW
      double complex elwamp,AMPLOpure,G2lEW

      include '../commons/common-consts.f'
      include '../commons/common-vars.f'
      include '../commons/common-quark.f'
      include '../commons/common-int.f'
      include '../commons/common-ren.f'
      include '../commons/common-inputoutput.f'

      sintW = dsqrt(0.22295D0)
      call G2llf(Mh,G2lEW)
      if (model.ge.1) then
       if (pseudo.eq.0) then
        G2lEW = G2lEW*(Hmx(Sind,1)*dcos(beta) + Hmx(Sind,2)*dsin(beta))
        !results in sin(beta-alpha) for h and cos(beta-alpha) for H in MSSM/2HDM
       else if (pseudo.eq.1) then
        G2lEW = (0.D0,0.D0)
       end if
      end if
      !last factor respects the nature being electroweak, but not strong int.
      !multiplication with -3/4 to have the same normalization
!         sum1 = sum1 - 2.D0 * (3/4.D0)/SUinvAlfa / (2.D0 * Pi * sintW**2)
!     &        * ((80.385D0-(0.D0,1.D0)*2.085/2.D0)**2 / mh2)
!     &        * G2lEW * Pi / alphamuR
      elwamp = - 2.D0 * (3/4.D0)/SUinvAlfa / (2.D0 * Pi * sintW**2)
     & * ((80.385-(0.D0,1.D0)*2.085/2.D0)**2 / mh2)
     & * G2lEW
      elw = (Real(elwamp)*Real(AMPLOpure(mh2))
     &  +Aimag(elwamp)*Aimag(AMPLOpure(mh2)))/(AMPLO(mh2))
      end

C-}}}
C-{{{ function B2SMh

      subroutine B2SMh(tau,res)
c      function B2SMh(tau)
      implicit none
      double complex res(3),dfdtau,ftau,Integral3
      double precision tau

      include '../commons/common-consts.f'

c     dfdtau = the derivative of f(tau) with respect to tau
      if(tau.le.1.d0) then
         dfdtau = (1.d0,0.d0) * dasin(dsqrt(tau))/dsqrt(tau*(1-tau))
      else
         dfdtau = - ( (1.d0,0.d0) * 
     &        dlog((1+dsqrt(1-1/tau))/(1-dsqrt(1-1/tau)))
     &        - (0.d0,1.d0) * Pi ) / dsqrt(tau*(tau-1)) / 2.d0
      endif
      ftau = - Integral3(0.d0,tau,1/4.d0) * tau / 2.d0
      res(1) = (3.d0*(ftau*(-3.d0 + tau) + (1.d0 - 2.d0*dfdtau
     &     * (-1.d0 + tau))*tau)) / tau**2
      res(2) = (4.d0 + 4.d0*((0.d0,-1.d0)*Pi + dlog(4.d0*tau)) -
     -     ((0.d0,-1.d0)*Pi + dlog(4.d0*tau))**2)/8.d0
      res(3) = res(2)+((-1.d0 - (0.d0,1.d0)*Pi + dlog(4.d0*tau))/tau*
     -     (2.d0 + 3.d0*((0.d0,-1.d0)*Pi + dlog(4.d0*tau))))/8.d0
      end

C-}}}
C-{{{ function B2SMA

      function B2SMA(tau)
      implicit none
      double complex B2SMA,dfdtau,ftau,Integral3
      double precision tau

      include '../commons/common-consts.f'

c     dfdtau = the derivative of f(tau) with respect to tau
      if(tau.le.1.d0) then
         dfdtau = (1.d0,0.d0) * dasin(dsqrt(tau))/dsqrt(tau*(1-tau))
      else
         dfdtau = - ( (1.d0,0.d0) * 
     &        dlog((1+dsqrt(1-1/tau))/(1-dsqrt(1-1/tau)))
     &        - (0.d0,1.d0) * Pi ) / dsqrt(tau*(tau-1)) / 2.d0
      endif
      ftau = - Integral3(0.d0,tau,1/4.d0) * tau / 2.d0
      B2SMA = 3.d0*(ftau - 2.d0*dfdtau*tau)/tau
      end

C-}}}
C-{{{ function B3SMh(tau,tauyuk)

      function B3SMh(tau)
c     for the correction dgb in SM
      implicit none
      double complex B3SMh,ftau,Integral3
      double precision tau

      include '../commons/common-consts.f'

      ftau = - Integral3(0.d0,tau,1/4.d0) * tau / 2.d0
      B3SMh = (3.d0*(1.d0 + ftau*(1.d0 - 1.d0/tau)))
     &     / tau
      end

C-}}}
C-{{{ function B3SMA(tau,tauyuk)

      function B3SMA(tau)
c     for the correction dgb in SM
      implicit none
      double complex B3SMA,ftau,Integral3
      double precision tau

      ftau = - Integral3(0.d0,tau,1/4.d0) * tau / 2.d0
      B3SMA = 3.d0*ftau/tau
      end

C-}}}
C-{{{  SM  NLO-Amplitude for gg -> h

      function B1SM(x)
      implicit none
      double complex B1SM
      double precision x,re,im!,z3
!      parameter(z3=1.2020569031595942853997d0)

      include '../commons/common-consts.f'

      !write(*,*) "Ln2-z3",Ln2,z3

      if(x.le.1) then
        re=5.5D0 + (1237*x)/540D0 + (17863*x**2)/14175D0 + 
     &  (157483*x**3)/198450D0 + (1273388*x**4)/2.338875D6 + 
     &  (97424769412.D0*x**5)/2.45827456875D11 + 
     &  (192544102096.D0*x**6)/6.39151387875D11 + 
     &  (12857858472608.D0*x**7)/5.4327867969375D13 + 
     &  (23440516028149504.D0*x**8)/1.2283530947875688D17 + 
     &  (49799915251641344.D0*x**9)/3.1694542816123686D17 + 
     &  (336455209965310976.D0*x**10)/2.556144297248417D18 + 
     &  (35551825334736256941056.D0*x**11)/3.177905948399716D23 + 
     &  (8997034951196951412736.D0*x**12)/9.346782201175637D22 + 
     &  (19285172165116498911494144.D0*x**13)/2.3039818125897943D26 + 
     &  (4781950116005826795259756544.D0*x**14)/6.509736041342993D28 + 
     &  (130055637744744299765070735671296.D0*x**15)/
     &    2.001201354709525D33 + 
     &  (69529832215048777546953547317248.D0*x**16)/
     &    1.2007208128257151D33 + 
     &  (53086110848941953433703832652611584.D0*x**17)/
     &   1.0223652958149886D36 + 
     &  (2356879269041194279233663139479289856.D0*x**18)/
     &   5.033247989396601D37 + 
     &  (10598520436555488398602523262137499910144.D0*x**19)/
     &   2.4969943275396536D41 + 
     &  (10209449359342795072899655365205906574802944.D0*x**20)/
     &   2.6413205996714454D44 + 
     &  (7537884338291359994283895325693568842989568.D0*x**21)/
     &   2.1324621004694362D44 + 
     &  (398026243067074932670482374686209106937643008.D0*x**22)/
     &   1.2265385158294487D46 + 
     &  (423212663357767959272746855484566612404449837056.D0*x**23)/
     &   1.415561729324498D49 + 
     &  (123220644564217007031702612236348297208517344886784.D0*x**24)/
     &   4.4590194473721684D51 + 
     &  (47571313771954196624214315745304438188227365806538752.D0*
     &     x**25)/1.8568630984414102D54 + 
     &  (33572927630511751177860164899298290841720551681418067968.D0*
     &     x**26)/1.4095876287137617D57 + 
     &  (504163464517112960527337755064595334861369527310764474368.D0*
     &     x**27)/2.2710022907055048D58 + 
     &  (27792506775415939802053425847928988842846047558999604199424.D0*
     &     x**28)/1.3398913515162478D60 + 
     &  (184781791409633757356650019479449340950533359965886247546440908
     &      8.D0
     &     *x**29)/9.513021521647398D64 + 
     &  (296587516577066658608178491473761216796228029975508017143431036
     &      928.D0*x**30)/1.6270997398692208D67 + 
     &  (288198950461967150188877188325116137072839999243325358891807539
     &      2.D0
     &     *x**31)/1.681501250928678D65 + 
     &  (206464516721707131169421377597782218045690004504082312661169462
     &      80579072.D0*x**32)/1.2787539565606193D72 + 
     &  (118672545617652217203256976235383692022330427792685652477275635
     &      521159168.D0*x**33)/7.788774099051044D72 + 
     &  (273665644773728225943288477743468597458461604977108189062745020
     &      17024.D0*x**34)/1.900203630065748D69 + 
     &  (824704144595649172679874774041380265599208321181900401192962244
     &      251542880256.D0*x**35)/6.048705131764746D76 + 
     &  (114272293331934772142491159316662201535570155204522235112687807
     &      27715883087036416.D0*x**36)/8.839940601868905D80 + 
     &  (319098304351154111613764327608124385701119393804405385626875332
     &      9793866458464256.D0*x**37)/2.5999825299614427D80 + 
     &  (827086136271506900667477315546009018594384141250603509270129680
     &      507802866904203264.D0*x**38)/7.088568911197886D82 + 
     &  (137309770556755883968527476607133927217471242150667112128626830
     &      8137353182846979670016.D0*x**39)/1.2363009455660743D86 + 
     &  (167857672735517985403969042392671572540978462204701757992806506
     &      162989116269157505040384.D0*x**40)/1.585836940176119D88 + 
     &  (121559319321905350783092828352759136896290487024358617902520567
     &      55011256911511002446653554688.D0*x**41)
     &    /1.203661867064569D93 + 
     &  (154535895048136510337294245993445715669442684637240537788725988
     &      273605324494283020045385728.D0*x**42)/1.602034428213712D91 + 
     &  (275241321045592417980777721066028489956759418836210974904850758
     &      44367347091868973245445378670592.D0*x**43)
     &   /2.984221671843656D96
     &   + (660737468098558161573569221997872178085326942051061663694409
     &      4488525985162617419734026273331085312.D0*x**44)
     &   /7.484970538742406D98 + 
     &  (897240132717829431404378908129167772889408451163835701673188870
     &      44393968409964832573113074127470592.D0*x**45)
     &   /1.0609648716026935D100 + 
     &  (143476219613286573585707942535340639015899587395116948858822145
     &      83520734655350478537825489780736.D0*x**46)
     &   /1.769327957407708D96
     &   + (563078625696518009559364995324696952006519875421220131777371
     &      267906459310211838529035315784993696907264.D0*x**47)/
     &   7.235273006348299D103 + 
     &  (403555413471543093603228859552100369069811832105344019563127460
     &      6758135010765714126113815042400523911168.D0*x**48)/
     &   5.398626781659884D104 + 
     &  (865907109588860479247088762179783992767826825843204928128281354
     &      28036395033854549724744220157296652238979072.D0*x**49)/
     &   1.2050274839343027D109 + 
     &  (808828126961634295387686730832611486988557353410519043585692623
     &      98339190556721445207767373753120029230736867328.D0*x**50)/
     &   1.1700174187677316D112 + 
     &  (153250100717310090033037133584007327260072523191148166207391208
     &      42118554435534778414412208843804801563778613248.D0*x**51)/
     &   2.3026347734373778D111 + 
     &  (849801977007635836437110934733689849298730896227116748118376127
     &      70108879661765870326522965382861418796253932683264.D0*x**52)
     &     /1.3253181341861849D115 + 
     &  (662314010365441769430541418062961608107702476239628385158434592
     &      306949534493308860778591762080560922334093916051079168.D0*
     &     x**53)/1.0713856427326912D119 + 
     &  (269219416316009444215834454172975174785159287720598344387517970
     &     4189174621511645060555577089281518043405824862638762360832.D0
     &     *x**54)/4.5141910448229246D122 + 
     &  (267581311798432275031799397371958659643610020294359709833682238
     &     6692839905668848731436482083874357915961721494606348025856.D0
     &     *x**55)/4.64775757447372D122 + 
     &  (393794683888137770783339826091780518727853730660163059165995959
     &      775542585537360032746079401385566868408066312574472053074165
     &      76.D0*x**56)/7.081150809472536D126 + 
     &  (703230226498963859230683920281744233442714630153823702176650530
     &      673416552500197354584058709334062748207444785476209800645244
     &      35456.D0*x**57)/1.3083357850870177D130 + 
     &  (810040867493625658564685673255655348968370950219406607481647416
     &      019768038043554598147325145833405341093600075494475076846223
     &      36.D0*x**58)/1.5583552028854986D127 + 
     &  (653996124863941339569080283669267308391895571710305492271997954
     &      595061716559333798132097975573940126275338027723026237483122
     &      2685696.D0*x**59)/1.3002623435757583D132 + 
     &  (755473373294994431409063402320885648298785939745789090655162086
     &      595527704629129441491964651492304851419174227226940317165454
     &      9775581184.D0*x**60)/1.5514493872210752D135 + 
     &  (123840293906680530337257452721275414544480804689816150011298175
     &      882185467661304708394652501959802137011127818768825494571844
     &      9530208256.D0*x**61)/2.625529732220281D134 + 
     &  (137425794021643078720657351623202815241049034844054834863152518
     &      545161141030987411776670926308452829645826035170059625970059
     &      07773175627776.D0*x**62)/3.006358585153458D138 + 
     &  (732579170533753699948350333953224287816600027989049553557487502
     &      662287052729356877575392594971025844800049314182047508879053
     &      5982561624064.D0*x**63)/1.6528464948679188D138 + 
     &  (801164044884857642678839034051875372243141843790134184902778744
     &      833267183750570824507741562498492136580166282100491966605304
     &      98548968900788224.D0*x**64)/1.8633705251818895D142 + 
     &  (431608558935589335781384868206923593232732643669900554916072207
     &      248721389016555618150511899267915660797177427559914350603892
     &      29345843979174805504.D0*x**65)/1.0343517198337D145 + 
     &  (245094112013424827485639916186657184997106348706042230948659249
     &      751662369164351364612824041613468303128240418205591004980712
     &      0092788957570928738304.D0*x**66)/6.049479915713097D146 + 
     &  (114156933651757159803161400163330296219055398857100914191229921
     &      380682651115824652366775608104054347854886732407375016075072
     &      05750028862762234270449664.D0*x**67)/2.90072561958443D150 + 
     &  (194683206028744027589618781433007617185322094030406210554105860
     &      657339546298754392917872773547359508842088041441970927041400
     &      974025718331760271895432265728.D0*x**68)
     &     /5.090608519149169D154
     &   + (348394572032976384426556546538109034127244913732271122161998
     &      962165186584888714305588711532073368061072461146199896404185
     &      55055122204662096044048741814463627264.D0*x**69)/
     &   9.370705843035769D159 + 
     &  (379386661593444523759189577566818871863185886904038680673605068
     &      309016157819922317512989876570231365800581582350659864111360
     &      1253464584423515157598071271981056.D0*x**70)/
     &   1.0492296117684838D159 + 
     &  (195408091107689037756471973632579042185419476739226976105634205
     &      449051169553089480367645424179716023909807113061711422660793
     &      09443225455268167946430390658626748416.D0*x**71)/
     &   5.554579595517883D162 + 
     &  (834161863143070921118022218535457192158513693644827022855109678
     &      243757596605287918216059043141825084481295386317772516729439
     &      2934203608912003102242060956837347328.D0*x**72)/
     &   2.4362191208411767D162 + 
     &  (153921325252316973437611888944973785728291141066858243436918010
     &      169054495808437295068892820760195471819644326099459789872156
     &      67335461089838165792176321553179344896.D0*x**73)/
     &   4.6170413248770725D162 + 
     &  (264474278305809563317233595081337990813708033082657903078634555
     &      213733357916133460552073389023101012006836509306771614158513
     &      9214532084238287735143308765229832359378944.D0*x**74)/
     &   8.145038900172843D167 + 
     &  (158377031655579430704677636702009223654979046841260302933007172
     &      189816292174084767267735023080032577582005906559100340923234
     &      38106642230736009228350066692615542699180007882752.D0*x**75)
     &    /5.006065527141402D174 + 
     &  (118604091093791654741607047134881463015474322730368580952515780
     &      635596563906888722386938766835443793408135782206745168175688
     &      4327556675261635109016022319399984642178154496.D0*x**76)/
     &   3.8463815037582804D170 + 
     &  (250456620592457952332509793279838270257410473398115609849639883
     &      082427187700786635846068834363763698431478625271163398842312
     &      863893565917085072466599065448378181091300351148032.D0
     &    *x**77)/8.330883341829687D175 + 
     &  (240593729852383030002437511249724426341501843925402548928311965
     &      836274209211580755538349839397665182818835677485437934665641
     &      80922889527282331511246890697302491968142562226601984.D0
     &     *x**78)/8.205589453382281D177 + 
     &  (962357993673169323842503669116724737407106671654736157305997357
     &      929871465285215913957120130554777615257086631158496537018091
     &      080065066537748983789547286460091114700984670775934976.D0
     &    *x**79)/3.3642916758867356D179 + 
     &  (240557833774321311340595476631240729230296863408748159253265518
     &      983043220498217424096508807693829246116453984821525265061124
     &      500498195219012719544393610505146930110368785311054430208.D0
     &     *x**80)/8.617392821235596D181 + 
     &  (969013954683812766889699298366038111306263781531174041017335906
     &      636963109919569966091027437725233039499957192094735176669886
     &     3796486233754864362299675834905064744926642483327190171648.D0
     &     *x**81)/3.555960576686164D183 + 
     &  (128752325932990824992152483308171999146925216703476614317212588
     &      287414568964834771871997104596182814245876508202979082364797
     &      731298868312001682703308050842638879965881263070543342762721
     &      28.D0*x**82)/4.838678051755051D186 + 
     &  (177498596512017962479357745960710868410036264384862852025515691
     &      173716579205944452483166644352217536013175275151608672510028
     &      963215368696782803926100670410432281224235818950828576575647
     &      121408.D0*x**83)/6.829493738311112D190 + 
     &  (673330714139353136745497577311426975121856257404015426453567438
     &      603104042346481480056672317894709092842591290746870146718359
     &      266934726527923469892813265438937518866731965402760038477463
     &      552.D0*x**84)/2.6516979302586993D188 + 
     &  (250076658737075140510586007584489171736989659096218990338686056
     &      433918064412388885070790184388046520785914471162831909709080
     &      631564549634518337598685111913692615742862776077710653668566
     &      490939392.D0*x**85)/1.007752061326672D194 + 
     &  (386848645826678026335090298677354641106854847333384784393358426
     &      845438575600059519310946858308348290865988164151660116275695
     &      946459489353057476539049576338806781703312182707330301483703
     &      0592970752.D0*x**86)/1.5947481069707507D195 + 
     &  (248752623665009311093040721176833907762651961618345334881650369
     &      341864643528183898509239997458421266610221996723260090948384
     &      088540594623296143770590252795104475599239903663012102778568
     &      69682774016.D0*x**87)/1.0487629176384D196 + 
     &  (120489419093324275082828095834329770603580111545668519979077828
     &      131565045354025730148839343708986721316609179702099343064326
     &      716709841739168057399705476756533005691730131332102323197223
     &      098994655232.D0*x**88)/5.194070892493736D196 + 
     &  (172835952657797706741842347325015080052202611295127136381602985
     &      922512904664269403557233339589061261146619447495033183572951
     &      950550430580953028190351904411237419297196283653484240384181
     &      721885372397387776.D0*x**89)/7.616149422348519D202 + 
     &  (107904912585199082621759853998403923828769706982189501422662273
     &      710988201333044068304902038581266283112536906340917777088291
     &      382038384569650301170521294707943819112711668599987347516221
     &      0038535877743458910208.D0*x**90)/4.8593752081871435D206 + 
     &  (806821333649629124607902081040240428397624247830023971456603381
     &      225305856694872414407959604183448272665612250135314169012846
     &      498207325957972999992895358866729330814473534097259823130399
     &      65780949608744091648.D0*x**91)/3.7123776526365166D205 + 
     &  (118523119038141235525352515903801568047102976927857403310057137
     &      329513023521133107862937872464733075790204449863381358796220
     &      492570933339841061934848138244863056933229183285105468205084
     &      8829846686813399084433408.D0*x**92)/5.570745483229148D209 + 
     &  (374372444133980730732183807927709005388586200598186332473755091
     &      689917841610114513954172423094706546642851547921262790238982
     &      593223817617092250375033767903577006035972704856416838686843
     &      44892562578739608682496.D0*x**93)/1.7970146720094028D208 + 
     &  (304089697721868084463871739782697040747832988473206629299510867
     &      195593016325628879494420626489774617667130235251060090829803
     &      791691332182815681715712973735218547402488377475449178251085
     &      0289583619821407305728.D0*x**94)/1.4903595412670252D207 + 
     &  (284029433144762814189547551722636006304735330964112273006451789
     &      678175726654242965392743806652373241727971731300236427300518
     &      037967832502583098306402264260617076328801428209938507085638
     &      18406647522990167024467968.D0*x**95)/1.421020615859223D211 + 
     &  (270124424318885990470010116306610660898810152830694370238360228
     &      493979570892043547430252225662768974305889720794288317875190
     &      180531139227192634764057873231987543984497112002489261193744
     &      2041762416579005481974971236352.D0*x**96)
     &     /1.3792931980868864D216 +
     &      (13037805079724112733237629641451837699498282643801303214529
     &      942257984814791058109147278995952207274498928418466315860166
     &      705430484843508369392690321664546845137594175014841910793788
     &      781792647493985073894444585112720900096.D0*x**97)
     &     /6.793019000577915D219 

        im=0D0

      else

         re=-58046139058868572777744639698476741741.D0/
     &(3.6064545487494844D39*x**21) - 
     &(28477079506926796682273.D0*Pi**2)/(6.827938984641202D24*x**21)+
     &(622522439.D0*Pi**4)/(2.199023255552D12*x**21) - 
     &57714778051466981372836611643495600169.D0/
     &(3.3528757132905364D39*x**20) - 
     &(1178793078926775533621867.D0*Pi**2)/
     &(2.5391398099134468D26*x**20) + 
     &(5231281.D0*Pi**4)/(1.7179869184D10*x**20) - 
     &549885602460289246892330449451597.D0
     &/(2.976949566624683D34*x**19) -
     &(16078689114806050749179.D0*Pi**2) 
     &/(3.0947964442158354D24*x**19) +
     &(45179245.D0*Pi**4)/(1.37438953472D11*x**19) - 
     &299652621854451011618671844089397.D0
     &/(1.506194721208917D34*x**18) -
     &(269351934487763849321.D0*Pi**2)/(4.60535185151166D22*x**18) + 
     &(6121059.D0*Pi**4)/(1.7179869184D10*x**18) - 
     &35517335328662135604767787493.D0/(1.6507794154382282D30*x**17) - 
     &(43745526234606101.D0*Pi**2)/(6.600491996597453D18*x**17) + 
     &(6663813.D0*Pi**4)/(1.7179869184D10*x**17) - 
     &734799959199758134928277341.D0/(3.1435740821333445D28*x**16) - 
     &(21978175584750149.D0*Pi**2)/(2.904904029752525D18*x**16) + 
     &(170867.D0*Pi**4)/(4.02653184D8*x**16) - 
     &11222046429515921547852721.D0/(4.396607107878803D26*x**15) - 
     &(68996897732575.D0*Pi**2)/(7.922465535688704D15*x**15) + 
     &(1879537.D0*Pi**4)/(4.02653184D9*x**15) - 
     &484179829941202503682397.D0/(1.7272385066666727D25*x**14) - 
     &(629932542741499.D0*Pi**2)/(6.224794349469696D16*x**14) + 
     &(52003.D0*Pi**4)/(1.00663296D8*x**14) - 
     &86124535849182524401.D0/(2.7794259266922086D21*x**13) - 
     &(30646411110911.D0*Pi**2)/(2.57831718617088D15*x**13) + 
     &(96577.D0*Pi**4)/(1.6777216D8*x**13) - 
     &13486964001135084049.D0/(3.9085677094109184D20*x**12) - 
     &(1898187832801.D0*Pi**2)/(1.342873534464D14*x**12) + 
     &(5083.D0*Pi**4)/(7.86432D6*x**12) - 
     &6502880257193227.D0/(1.6780370116608D17*x**11) - 
     &(1351918621.D0*Pi**2)/(7.92723456D10*x**11) + 
     &(23023.D0*Pi**4)/(3.145728D7*x**11) - 
     &6453781200022133.D0/(1.4682823852032D17*x**10) - 
     &(362893621.D0*Pi**2)/(1.73408256D10*x**10) + 
     &(3289.D0*Pi**4)/(3.93216D6*x**10) - 
     &7839039221777.D0/(1.55373797376D14*x**9) - 
     &(181738691.D0*Pi**2)/(6.93633024D9*x**9) + 
     &(253.D0*Pi**4)/(262144D0*x**9) -
     &7439240447.D0/(1.2644352D11*x**8) - 
     &(72840013.D0*Pi**2)/(2.1676032D9*x**8) +
     &(23.D0*Pi**4)/(20480D0*x**8) - 
     &20781037.D0/(2.94912D8*x**7) -
     &(1963151.D0*Pi**2)/(4.42368D7*x**7) + 
     &(161.D0*Pi**4)/(122880D0*x**7) - 3336587.D0/(3.6864D7*x**6) - 
     &(56033.D0*Pi**2)/(921600D0*x**6) +
     &(23.D0*Pi**4)/(15360D0*x**6) - 
     &2105.D0/(13824D0*x**5) - (361.D0*Pi**2)/(4096D0*x**5) + 
     &(23.D0*Pi**4)/(15360D0*x**5) - 2183.D0/(3456D0*x**4) - 
     &(185.D0*Pi**2)/(1152D0*x**4) + 1073.D0/(256D0*x**3) - 
     &(965.D0*Pi**2)/(384D0*x**3) -
     &(23.D0*Pi**4)/(960D0*x**3)+1.D0/(8D0*x**2)+ 
     &(23.D0*Pi**2)/(48D0*x**2) + (53.D0*Pi**4)/(480D0*x**2) +
     &47.D0/(2D0*x) + 
     &(9.D0*Pi**2)/(8D0*x) - (53.D0*Pi**4)/(480D0*x) - 
     &(434103706992134839828235843.D0*Ln2)/
     &(9.576184425959285D27*x**21) + 
     &(108169988050987.D0*Pi**2*Ln2)/(7.332643045638144D16*x**21) - 
     &(725223186676418727763343653.D0*Ln2)/
     &(1.4663532402250156D28*x**20) + 
     &(127097499805343.D0*Pi**2*Ln2)/(7.790933235990528D16*x**20) - 
     &(129536292891028977423061.D0*Ln2)/
     &(2.3893649017842847D24*x**19) + 
     &(1925783047141.D0*Pi**2*Ln2)/(1.061303598710784D15*x**19) - 
     &(154068287995292814552763.D0*Ln2)/
     &(2.5789970368465295D24*x**18) + 
     &(1796566487263.D0*Pi**2*Ln2)/(8.8441966559232D14*x**18) - 
     &(34185062170424534959.D0*Ln2)/(5.162566632710603D20*x**17) + 
     &(155824952197.D0*Pi**2*Ln2)/(6.803228196864D13*x**17) - 
     &(643902295791345859.D0*Ln2)/(8.714712089257574D18*x**16) + 
     &(94441599167.D0*Pi**2*Ln2)/(3.627502534656D13*x**16) - 
     &(361976028255874007.D0*Ln2)/(4.357356044628787D18*x**15) + 
     &(4923932203.D0*Pi**2*Ln2)/(1.64886478848D12*x**15) - 
     &(12829677820940707.D0*Ln2)/(1.361673763946496D17*x**14) + 
     &(896672177.D0*Pi**2*Ln2)/(2.59107323904D11*x**14) - 
     &(4970594385391.D0*Ln2)/(4.604137832448D13*x**13) + 
     &(943466479.D0*Pi**2*Ln2)/(2.3253221376D11*x**13) - 
     &(12610413510803.D0*Ln2)/(1.007155150848D14*x**12) + 
     &(105088189.D0*Pi**2*Ln2)/(2.179989504D10*x**12) - 
     &(567837091.D0*Ln2)/(3.8535168D9*x**11) + 
     &(823099.D0*Pi**2*Ln2)/(1.4155776D8*x**11) - 
     &(147000358439.D0*Ln2)/(8.323596288D11*x**10) + 
     &(7069133.D0*Pi**2*Ln2)/(9.9090432D8*x**10) - 
     &(60122770109.D0*Ln2)/(2.774532096D11*x**9) + 
     &(589069.D0*Pi**2*Ln2)/(6.6060288D7*x**9) - 
     &(850063.D0*Ln2)/(3.096576D6*x**8) + 
     &(29293.D0*Pi**2*Ln2)/(2.58048D6*x**8) - 
     &(4031237.D0*Ln2)/(1.10592D7*x**7) + 
     &(359.D0*Pi**2*Ln2)/(24576D0*x**7) - 
     &(32141.D0*Ln2)/(61440D0*x**6) + 
     &(337.D0*Pi**2*Ln2)/(18432D0*x**6) - 
     &(16075.D0*Ln2)/(18432D0*x**5) + 
     &(319.D0*Pi**2*Ln2)/(18432D0*x**5) - (1157.D0*Ln2)/(576D0*x**4) - 
     &(23.D0*Pi**2*Ln2)/(576D0*x**4) + (543.D0*Ln2)/(64D0*x**3) - 
     &(277.D0*Pi**2*Ln2)/(192D0*x**3) - Ln2/(2D0*x**2) + 
     &(27.D0*Pi**2*Ln2)/(4D0*x**2) - (12.D0*Ln2)/x - 
     &(11.D0*Pi**2*Ln2)/(3D0*x) + 
     &(12596657519154026723897.D0*Ln2**2)/
     &(9.483248589779447D23*x**21) - 
     &(135330965.D0*Pi**2*Ln2**2)/(2.74877906944D11*x**21) + 
     &(105327419789794072942003.D0*Ln2**2)/
     &(7.053166138648463D24*x**20) - 
     &(1137235.D0*Pi**2*Ln2**2)/(2.147483648D9*x**20) + 
     &(1451080559100734349107.D0*Ln2**2)/
     &(8.596656789488432D22*x**19) - 
     &(9821575.D0*Pi**2*Ln2**2)/(1.7179869184D10*x**19) + 
     &(294651073770071017513.D0*Ln2**2)/(1.53511728383722D22*x**18) - 
     &(1330665.D0*Pi**2*Ln2**2)/(2.147483648D9*x**18) + 
     &(628443167587826389.D0*Ln2**2)/(2.860213198525563D19*x**17) - 
     &(1448655.D0*Pi**2*Ln2**2)/(2.147483648D9*x**17) + 
     &(18402875124264109.D0*Ln2**2)/(7.262260074381312D17*x**16) - 
     &(37145.D0*Pi**2*Ln2**2)/(5.0331648D7*x**16) + 
     &(54049884731053.D0*Ln2**2)/(1.8339040591872D15*x**15) - 
     &(81719.D0*Pi**2*Ln2**2)/(1.00663296D8*x**15) + 
     &(2849555044307.D0*Ln2**2)/(8.233854959616D13*x**14) - 
     &(11305.D0*Pi**2*Ln2**2)/(1.2582912D7*x**14) + 
     &(44136842613917.D0*Ln2**2)/(1.0742988275712D15*x**13) - 
     &(4199.D0*Pi**2*Ln2**2)/(4.194304D6*x**13) + 
     &(1658156437001.D0*Ln2**2)/(3.35718383616D13*x**12) - 
     &(221.D0*Pi**2*Ln2**2)/(196608D0*x**12) + 
     &(1194127681.D0*Ln2**2)/(1.98180864D10*x**11) - 
     &(1001.D0*Pi**2*Ln2**2)/(786432D0*x**11) + 
     &(5187176251.D0*Ln2**2)/(6.93633024D10*x**10) - 
     &(143.D0*Pi**2*Ln2**2)/(98304D0*x**10) + 
     &(146013793.D0*Ln2**2)/(1.54140672D9*x**9) - 
     &(55.D0*Pi**2*Ln2**2)/(32768D0*x**9) + 
     &(7403657.D0*Ln2**2)/(6.02112D7*x**8) - 
     &(Pi**2*Ln2**2)/(512D0*x**8) + 
     &(202027.D0*Ln2**2)/(1.2288D6*x**7) - 
     &(7.D0*Pi**2*Ln2**2)/(3072D0*x**7) + 
     &(35041.D0*Ln2**2)/(153600D0*x**6) - 
     &(Pi**2*Ln2**2)/(384D0*x**6) + (2059.D0*Ln2**2)/(6144D0*x**5) - 
     &(Pi**2*Ln2**2)/(384D0*x**5) + (5.D0*Ln2**2)/(8D0*x**4) + 
     &(179.D0*Ln2**2)/(16D0*x**3) + (Pi**2*Ln2**2)/(24D0*x**3) - 
     &(11.D0*Ln2**2)/(4D0*x**2) - (13.D0*Pi**2*Ln2**2)/(12D0*x**2) - 
     &(9.D0*Ln2**2)/(2D0*x) + (13.D0*Pi**2*Ln2**2)/(12D0*x) + 
     &(27244761678997.D0*Ln2**3)/(1.833160761409536D16*x**21) + 
     &(29787962752043.D0*Ln2**3)/(1.947733308997632D16*x**20) + 
     &(7073310593837.D0*Ln2**3)/(4.510540294520832D15*x**19) + 
     &(6012794194571.D0*Ln2**3)/(3.75878357876736D15*x**18) + 
     &(27544100377.D0*Ln2**3)/(1.700807049216D13*x**17) + 
     &(14701833347.D0*Ln2**3)/(9.06875633664D12*x**16) + 
     &(657531793.D0*Ln2**3)/(4.1221619712D11*x**15) + 
     &(98909981.D0*Ln2**3)/(6.4776830976D10*x**14) + 
     &(81075859.D0*Ln2**3)/(5.813305344D10*x**13) + 
     &(6346273.D0*Ln2**3)/(5.44997376D9*x**12) + 
     &(27733.D0*Ln2**3)/(3.538944D7*x**11) + 
     &(42113.D0*Ln2**3)/(2.4772608D8*x**10) - 
     &(13247.D0*Ln2**3)/(1.6515072D7*x**9) - 
     &(1487.D0*Ln2**3)/(645120D0*x**8) - 
     &(137.D0*Ln2**3)/(30720D0*x**7) -
     &(151.D0*Ln2**3)/(23040D0*x**6) - 
     &(5.D0*Ln2**3)/(4608D0*x**5) + (13.D0*Ln2**3)/(144D0*x**4) + 
     &(119.D0*Ln2**3)/(48D0*x**3) - (9.D0*Ln2**3)/x**2 + 
     &(4.D0*Ln2**3)/x - (135330965.D0*Ln2**4)/
     &(1.37438953472D11*x**21) - 
     &(1137235.D0*Ln2**4)/(1.073741824D9*x**20) - 
     &(9821575.D0*Ln2**4)/(8.589934592D9*x**19) - 
     &(1330665.D0*Ln2**4)/(1.073741824D9*x**18) - 
     &(1448655.D0*Ln2**4)/(1.073741824D9*x**17) - 
     &(37145.D0*Ln2**4)/(2.5165824D7*x**16) - 
     &(81719.D0*Ln2**4)/(5.0331648D7*x**15) - 
     &(11305.D0*Ln2**4)/(6.291456D6*x**14) - 
     &(4199.D0*Ln2**4)/(2.097152D6*x**13) - 
     &(221.D0*Ln2**4)/(98304D0*x**12) - 
     &(1001.D0*Ln2**4)/(393216D0*x**11) - 
     &(143.D0*Ln2**4)/(49152D0*x**10) -
     &(55.D0*Ln2**4)/(16384D0*x**9) - 
     &Ln2**4/(256D0*x**8) - (7.D0*Ln2**4)/(1536D0*x**7) - 
     &Ln2**4/(192D0*x**6) - Ln2**4/(192D0*x**5) + 
     &Ln2**4/(12D0*x**3) + (5.D0*Ln2**4)/(6D0*x**2) - 
     &(5.D0*Ln2**4)/(6D0*x) - 
     &(434103706992134839828235843.D0*dlog(x))/
     &(1.915236885191857D28*x**21) + 
     &(108169988050987.D0*Pi**2*dlog(x))
     &/(1.4665286091276288D17*x**21) - 
     &(725223186676418727763343653.D0*dlog(x))/
     &(2.9327064804500313D28*x**20) + 
     &(127097499805343.D0*Pi**2*dlog(x))
     &/(1.5581866471981056D17*x**20) - 
     &(129536292891028977423061.D0*dlog(x))/
     &(4.7787298035685694D24*x**19) + 
     &(1925783047141.D0*Pi**2*dlog(x))/(2.122607197421568D15*x**19) - 
     &(154068287995292814552763.D0*dlog(x))
     &/(5.157994073693059D24*x**18) + 
     &(1796566487263.D0*Pi**2*dlog(x))/(1.76883933118464D15*x**18) - 
     &(34185062170424534959.D0*dlog(x))/(1.0325133265421206D21*x**17) + 
     &(155824952197.D0*Pi**2*dlog(x))/(1.3606456393728D14*x**17) - 
     &(643902295791345859.D0*dlog(x))/(1.7429424178515149D19*x**16) + 
     &(94441599167.D0*Pi**2*dlog(x))/(7.255005069312D13*x**16) - 
     &(361976028255874007.D0*dlog(x))/(8.714712089257574D18*x**15) + 
     &(4923932203.D0*Pi**2*dlog(x))/(3.29772957696D12*x**15) - 
     &(12829677820940707.D0*dlog(x))/(2.723347527892992D17*x**14) + 
     &(896672177.D0*Pi**2*dlog(x))/(5.18214647808D11*x**14) - 
     &(4970594385391.D0*dlog(x))/(9.208275664896D13*x**13) + 
     &(943466479.D0*Pi**2*dlog(x))/(4.6506442752D11*x**13) - 
     &(12610413510803.D0*dlog(x))/(2.014310301696D14*x**12) + 
     &(105088189.D0*Pi**2*dlog(x))/(4.359979008D10*x**12) - 
     &(567837091.D0*dlog(x))/(7.7070336D9*x**11) + 
     &(823099.D0*Pi**2*dlog(x))/(2.8311552D8*x**11) - 
     &(147000358439.D0*dlog(x))/(1.6647192576D12*x**10) + 
     &(7069133.D0*Pi**2*dlog(x))/(1.98180864D9*x**10) - 
     &(60122770109.D0*dlog(x))/(5.549064192D11*x**9) + 
     &(589069.D0*Pi**2*dlog(x))/(1.32120576D8*x**9) - 
     &(850063.D0*dlog(x))/(6.193152D6*x**8) + 
     &(29293.D0*Pi**2*dlog(x))/(5.16096D6*x**8) - 
     &(4031237.D0*dlog(x))/(2.21184D7*x**7) + 
     &(359.D0*Pi**2*dlog(x))/(49152D0*x**7) - 
     &(32141.D0*dlog(x))/(122880D0*x**6) + 
     &(337.D0*Pi**2*dlog(x))/(36864D0*x**6) - 
     &(16075.D0*dlog(x))/(36864D0*x**5) + 
     &(319.D0*Pi**2*dlog(x))/(36864D0*x**5) -
     &(1157.D0*dlog(x))/(1152D0*x**4)- 
     &(23.D0*Pi**2*dlog(x))/(1152D0*x**4) +
     &(543.D0*dlog(x))/(128D0*x**3) - 
     &(277.D0*Pi**2*dlog(x))/(384D0*x**3) -
     &dlog(x)/(4D0*x**2) + 
     &(27.D0*Pi**2*dlog(x))/(8D0*x**2) - (6.D0*dlog(x))/x - 
     &(11.D0*Pi**2*dlog(x))/(6D0*x) + 
     &(12596657519154026723897.D0*Ln2*dlog(x))/
     &(9.483248589779447D23*x**21) - 
     &(135330965.D0*Pi**2*Ln2*dlog(x))/(2.74877906944D11*x**21) + 
     &(105327419789794072942003.D0*Ln2*dlog(x))/
     &(7.053166138648463D24*x**20) - 
     &(1137235.D0*Pi**2*Ln2*dlog(x))/(2.147483648D9*x**20) + 
     &(1451080559100734349107.D0*Ln2*dlog(x))/
     &(8.596656789488432D22*x**19) - 
     &(9821575.D0*Pi**2*Ln2*dlog(x))/(1.7179869184D10*x**19) + 
     &(294651073770071017513.D0*Ln2*dlog(x))/
     &(1.53511728383722D22*x**18) - 
     &(1330665.D0*Pi**2*Ln2*dlog(x))/(2.147483648D9*x**18) + 
     &(628443167587826389.D0*Ln2*dlog(x))/
     &(2.860213198525563D19*x**17) - 
     &(1448655.D0*Pi**2*Ln2*dlog(x))/(2.147483648D9*x**17) + 
     &(18402875124264109.D0*Ln2*dlog(x))/(7.262260074381312D17*x**16) - 
     &(37145.D0*Pi**2*Ln2*dlog(x))/(5.0331648D7*x**16) + 
     &(54049884731053.D0*Ln2*dlog(x))/(1.8339040591872D15*x**15) - 
     &(81719.D0*Pi**2*Ln2*dlog(x))/(1.00663296D8*x**15) + 
     &(2849555044307.D0*Ln2*dlog(x))/(8.233854959616D13*x**14) - 
     &(11305.D0*Pi**2*Ln2*dlog(x))/(1.2582912D7*x**14) + 
     &(44136842613917.D0*Ln2*dlog(x))/(1.0742988275712D15*x**13) - 
     &(4199.D0*Pi**2*Ln2*dlog(x))/(4.194304D6*x**13) + 
     &(1658156437001.D0*Ln2*dlog(x))/(3.35718383616D13*x**12) - 
     &(221.D0*Pi**2*Ln2*dlog(x))/(196608D0*x**12) + 
     &(1194127681.D0*Ln2*dlog(x))/(1.98180864D10*x**11) - 
     &(1001.D0*Pi**2*Ln2*dlog(x))/(786432D0*x**11) + 
     &(5187176251.D0*Ln2*dlog(x))/(6.93633024D10*x**10) - 
     &(143.D0*Pi**2*Ln2*dlog(x))/(98304D0*x**10) + 
     &(146013793.D0*Ln2*dlog(x))/(1.54140672D9*x**9) - 
     &(55.D0*Pi**2*Ln2*dlog(x))/(32768D0*x**9) + 
     &(7403657.D0*Ln2*dlog(x))/(6.02112D7*x**8) - 
     &(Pi**2*Ln2*dlog(x))/(512D0*x**8) + 
     &(202027.D0*Ln2*dlog(x))/(1.2288D6*x**7) - 
     &(7.D0*Pi**2*Ln2*dlog(x))/(3072D0*x**7) + 
     &(35041.D0*Ln2*dlog(x))/(153600D0*x**6) - 
     &(Pi**2*Ln2*dlog(x))/(384D0*x**6) + 
     &(2059.D0*Ln2*dlog(x))/(6144D0*x**5) - 
     &(Pi**2*Ln2*dlog(x))/(384D0*x**5) + 
     &(5.D0*Ln2*dlog(x))/(8D0*x**4) + (179.D0*Ln2*dlog(x))/(16D0*x**3) + 
     &(Pi**2*Ln2*dlog(x))/(24D0*x**3) - 
     &(11.D0*Ln2*dlog(x))/(4D0*x**2) - 
     &(13.D0*Pi**2*Ln2*dlog(x))/(12D0*x**2) -
     &(9.D0*Ln2*dlog(x))/(2D0*x) + 
     &(13.D0*Pi**2*Ln2*dlog(x))/(12D0*x) + 
     &(27244761678997.D0*Ln2**2*dlog(x))/(1.222107174273024D16*x**21) + 
     &(29787962752043.D0*Ln2**2*dlog(x))/(1.298488872665088D16*x**20) + 
     &(7073310593837.D0*Ln2**2*dlog(x))/(3.007026863013888D15*x**19) + 
     &(6012794194571.D0*Ln2**2*dlog(x))/(2.50585571917824D15*x**18) + 
     &(27544100377.D0*Ln2**2*dlog(x))/(1.133871366144D13*x**17) + 
     &(14701833347.D0*Ln2**2*dlog(x))/(6.04583755776D12*x**16) + 
     &(657531793.D0*Ln2**2*dlog(x))/(2.7481079808D11*x**15) + 
     &(98909981.D0*Ln2**2*dlog(x))/(4.3184553984D10*x**14) + 
     &(81075859.D0*Ln2**2*dlog(x))/(3.875536896D10*x**13) + 
     &(6346273.D0*Ln2**2*dlog(x))/(3.63331584D9*x**12) + 
     &(27733.D0*Ln2**2*dlog(x))/(2.359296D7*x**11) + 
     &(42113.D0*Ln2**2*dlog(x))/(1.6515072D8*x**10) - 
     &(13247.D0*Ln2**2*dlog(x))/(1.1010048D7*x**9) - 
     &(1487.D0*Ln2**2*dlog(x))/(430080D0*x**8) - 
     &(137.D0*Ln2**2*dlog(x))/(20480D0*x**7) - 
     &(151.D0*Ln2**2*dlog(x))/(15360D0*x**6) - 
     &(5.D0*Ln2**2*dlog(x))/(3072D0*x**5) + 
     &(13.D0*Ln2**2*dlog(x))/(96D0*x**4) + 
     &(119.D0*Ln2**2*dlog(x))/(32D0*x**3) - 
     &(27.D0*Ln2**2*dlog(x))/(2D0*x**2) + (6*Ln2**2*dlog(x))/x - 
     &(135330965.D0*Ln2**3*dlog(x))/(6.8719476736D10*x**21) - 
     &(1137235.D0*Ln2**3*dlog(x))/(5.36870912D8*x**20) - 
     &(9821575.D0*Ln2**3*dlog(x))/(4.294967296D9*x**19) - 
     &(1330665.D0*Ln2**3*dlog(x))/(5.36870912D8*x**18) - 
     &(1448655.D0*Ln2**3*dlog(x))/(5.36870912D8*x**17) - 
     &(37145.D0*Ln2**3*dlog(x))/(1.2582912D7*x**16) - 
     &(81719.D0*Ln2**3*dlog(x))/(2.5165824D7*x**15) - 
     &(11305.D0*Ln2**3*dlog(x))/(3.145728D6*x**14) - 
     &(4199.D0*Ln2**3*dlog(x))/(1.048576D6*x**13) - 
     &(221.D0*Ln2**3*dlog(x))/(49152D0*x**12) - 
     &(1001.D0*Ln2**3*dlog(x))/(196608D0*x**11) - 
     &(143.D0*Ln2**3*dlog(x))/(24576D0*x**10) - 
     &(55.D0*Ln2**3*dlog(x))/(8192D0*x**9) - 
     &(Ln2**3*dlog(x))/(128D0*x**8) - 
     &(7.D0*Ln2**3*dlog(x))/(768D0*x**7) - 
     &(Ln2**3*dlog(x))/(96D0*x**6) - (Ln2**3*dlog(x))/(96D0*x**5) + 
     &(Ln2**3*dlog(x))/(6D0*x**3) + (5.D0*Ln2**3*dlog(x))/(3D0*x**2) - 
     &(5.D0*Ln2**3*dlog(x))/(3D0*x) + 
     &(12596657519154026723897.D0*dlog(x)**2)/
     &(3.7932994359117786D24*x**21) - 
     &(135330965*Pi**2*dlog(x)**2)/(1.099511627776D12*x**21) + 
     &(105327419789794072942003.D0*dlog(x)**2)/
     &(2.8212664554593853D25*x**20) - 
     &(1137235.D0*Pi**2*dlog(x)**2)/(8.589934592D9*x**20) + 
     &(1451080559100734349107.D0*dlog(x)**2)/
     &(3.438662715795373D23*x**19) - 
     &(9821575.D0*Pi**2*dlog(x)**2)/(6.8719476736D10*x**19) + 
     &(294651073770071017513.D0*dlog(x)**2)
     &/(6.14046913534888D22*x**18) - 
     &(1330665.D0*Pi**2*dlog(x)**2)/(8.589934592D9*x**18) + 
     &(628443167587826389.D0*dlog(x)**2)
     &/(1.1440852794102252D20*x**17) - 
     &(1448655.D0*Pi**2*dlog(x)**2)/(8.589934592D9*x**17) + 
     &(18402875124264109.D0*dlog(x)**2)
     &/(2.904904029752525D18*x**16) - 
     &(37145.D0*Pi**2*dlog(x)**2)/(2.01326592D8*x**16) + 
     &(54049884731053.D0*dlog(x)**2)/(7.3356162367488D15*x**15) - 
     &(81719.D0*Pi**2*dlog(x)**2)/(4.02653184D8*x**15) + 
     &(2849555044307.D0*dlog(x)**2)/(3.2935419838464D14*x**14) - 
     &(11305.D0*Pi**2*dlog(x)**2)/(5.0331648D7*x**14) + 
     &(44136842613917.D0*dlog(x)**2)/(4.2971953102848D15*x**13) - 
     &(4199.D0*Pi**2*dlog(x)**2)/(1.6777216D7*x**13) + 
     &(1658156437001.D0*dlog(x)**2)/(1.342873534464D14*x**12) - 
     &(221.D0*Pi**2*dlog(x)**2)/(786432D0*x**12) + 
     &(1194127681.D0*dlog(x)**2)/(7.92723456D10*x**11) - 
     &(1001.D0*Pi**2*dlog(x)**2)/(3.145728D6*x**11) + 
     &(5187176251.D0*dlog(x)**2)/(2.774532096D11*x**10) - 
     &(143.D0*Pi**2*dlog(x)**2)/(393216D0*x**10) + 
     &(146013793.D0*dlog(x)**2)/(6.16562688D9*x**9) - 
     &(55.D0*Pi**2*dlog(x)**2)/(131072D0*x**9) + 
     &(7403657.D0*dlog(x)**2)/(2.408448D8*x**8) - 
     &(Pi**2*dlog(x)**2)/(2048D0*x**8) + 
     &(202027.D0*dlog(x)**2)/(4.9152D6*x**7) - 
     &(7.D0*Pi**2*dlog(x)**2)/(12288D0*x**7) + 
     &(35041.D0*dlog(x)**2)/(614400D0*x**6) - 
     &(Pi**2*dlog(x)**2)/(1536D0*x**6) + 
     &(2059.D0*dlog(x)**2)/(24576D0*x**5) - 
     &(Pi**2*dlog(x)**2)/(1536D0*x**5) + (5.D0*dlog(x)**2)/(32D0*x**4) + 
     &(179.D0*dlog(x)**2)/(64D0*x**3) + (Pi**2*dlog(x)**2)/(96D0*x**3) - 
     &(11.D0*dlog(x)**2)/(16D0*x**2) -
     &(13.D0*Pi**2*dlog(x)**2)/(48D0*x**2) - 
     &(9.D0*dlog(x)**2)/(8D0*x) + (13.D0*Pi**2*dlog(x)**2)/(48D0*x) + 
     &(27244761678997.D0*Ln2*dlog(x)**2)/(2.444214348546048D16*x**21) + 
     &(29787962752043.D0*Ln2*dlog(x)**2)/(2.596977745330176D16*x**20) + 
     &(7073310593837.D0*Ln2*dlog(x)**2)/(6.014053726027776D15*x**19) + 
     &(6012794194571.D0*Ln2*dlog(x)**2)/(5.01171143835648D15*x**18) + 
     &(27544100377.D0*Ln2*dlog(x)**2)/(2.267742732288D13*x**17) + 
     &(14701833347.D0*Ln2*dlog(x)**2)/(1.209167511552D13*x**16) + 
     &(657531793.D0*Ln2*dlog(x)**2)/(5.4962159616D11*x**15) + 
     &(98909981.D0*Ln2*dlog(x)**2)/(8.6369107968D10*x**14) + 
     &(81075859.D0*Ln2*dlog(x)**2)/(7.751073792D10*x**13) + 
     &(6346273.D0*Ln2*dlog(x)**2)/(7.26663168D9*x**12) + 
     &(27733.D0*Ln2*dlog(x)**2)/(4.718592D7*x**11) + 
     &(42113.D0*Ln2*dlog(x)**2)/(3.3030144D8*x**10) - 
     &(13247.D0*Ln2*dlog(x)**2)/(2.2020096D7*x**9) - 
     &(1487.D0*Ln2*dlog(x)**2)/(860160D0*x**8) - 
     &(137.D0*Ln2*dlog(x)**2)/(40960D0*x**7) - 
     &(151.D0*Ln2*dlog(x)**2)/(30720D0*x**6) - 
     &(5.D0*Ln2*dlog(x)**2)/(6144D0*x**5) + 
     &(13.D0*Ln2*dlog(x)**2)/(192D0*x**4) + 
     &(119.D0*Ln2*dlog(x)**2)/(64D0*x**3) - 
     &(27.D0*Ln2*dlog(x)**2)/(4D0*x**2) + (3.D0*Ln2*dlog(x)**2)/x - 
     &(405992895.D0*Ln2**2*dlog(x)**2)/(2.74877906944D11*x**21) - 
     &(3411705.D0*Ln2**2*dlog(x)**2)/(2.147483648D9*x**20) - 
     &(29464725.D0*Ln2**2*dlog(x)**2)/(1.7179869184D10*x**19) - 
     &(3991995.D0*Ln2**2*dlog(x)**2)/(2.147483648D9*x**18) - 
     &(4345965.D0*Ln2**2*dlog(x)**2)/(2.147483648D9*x**17) - 
     &(37145.D0*Ln2**2*dlog(x)**2)/(1.6777216D7*x**16) - 
     &(81719.D0*Ln2**2*dlog(x)**2)/(3.3554432D7*x**15) - 
     &(11305.D0*Ln2**2*dlog(x)**2)/(4.194304D6*x**14) - 
     &(12597.D0*Ln2**2*dlog(x)**2)/(4.194304D6*x**13) - 
     &(221.D0*Ln2**2*dlog(x)**2)/(65536D0*x**12) - 
     &(1001.D0*Ln2**2*dlog(x)**2)/(262144D0*x**11) - 
     &(143.D0*Ln2**2*dlog(x)**2)/(32768D0*x**10) - 
     &(165.D0*Ln2**2*dlog(x)**2)/(32768D0*x**9) - 
     &(3.D0*Ln2**2*dlog(x)**2)/(512D0*x**8) - 
     &(7.D0*Ln2**2*dlog(x)**2)/(1024D0*x**7) - 
     &(Ln2**2*dlog(x)**2)/(128D0*x**6) - 
     &(Ln2**2*dlog(x)**2)/(128D0*x**5) + 
     &(Ln2**2*dlog(x)**2)/(8D0*x**3) + 
     &(5.D0*Ln2**2*dlog(x)**2)/(4D0*x**2) - 
     &(5.D0*Ln2**2*dlog(x)**2)/(4D0*x) + 
     &(27244761678997.D0*dlog(x)**3)/(1.4665286091276288D17*x**21) + 
     &(29787962752043.D0*dlog(x)**3)/(1.5581866471981056D17*x**20) + 
     &(7073310593837.D0*dlog(x)**3)/(3.608432235616666D16*x**19) + 
     &(6012794194571.D0*dlog(x)**3)/(3.007026863013888D16*x**18) + 
     &(27544100377.D0*dlog(x)**3)/(1.3606456393728D14*x**17) + 
     &(14701833347.D0*dlog(x)**3)/(7.255005069312D13*x**16) + 
     &(657531793.D0*dlog(x)**3)/(3.29772957696D12*x**15) + 
     &(98909981.D0*dlog(x)**3)/(5.18214647808D11*x**14) + 
     &(81075859.D0*dlog(x)**3)/(4.6506442752D11*x**13) + 
     &(6346273.D0*dlog(x)**3)/(4.359979008D10*x**12) + 
     &(27733.D0*dlog(x)**3)/(2.8311552D8*x**11) + 
     &(42113.D0*dlog(x)**3)/(1.98180864D9*x**10) - 
     &(13247.D0*dlog(x)**3)/(1.32120576D8*x**9) - 
     &(1487.D0*dlog(x)**3)/(5.16096D6*x**8) - 
     &(137.D0*dlog(x)**3)/(245760D0*x**7) - 
     &(151.D0*dlog(x)**3)/(184320D0*x**6) -
     &(5.D0*dlog(x)**3)/(36864D0*x**5) + 
     &(13.D0*dlog(x)**3)/(1152D0*x**4) +
     &(119.D0*dlog(x)**3)/(384D0*x**3) - 
     &(9.D0*dlog(x)**3)/(8D0*x**2) + dlog(x)**3/(2D0*x) - 
     &(135330965.D0*Ln2*dlog(x)**3)/(2.74877906944D11*x**21) - 
     &(1137235.D0*Ln2*dlog(x)**3)/(2.147483648D9*x**20) - 
     &(9821575.D0*Ln2*dlog(x)**3)/(1.7179869184D10*x**19) - 
     &(1330665.D0*Ln2*dlog(x)**3)/(2.147483648D9*x**18) - 
     &(1448655.D0*Ln2*dlog(x)**3)/(2.147483648D9*x**17) - 
     &(37145.D0*Ln2*dlog(x)**3)/(5.0331648D7*x**16) - 
     &(81719.D0*Ln2*dlog(x)**3)/(1.00663296D8*x**15) - 
     &(11305.D0*Ln2*dlog(x)**3)/(1.2582912D7*x**14) - 
     &(4199.D0*Ln2*dlog(x)**3)/(4.194304D6*x**13) - 
     &(221.D0*Ln2*dlog(x)**3)/(196608D0*x**12) - 
     &(1001.D0*Ln2*dlog(x)**3)/(786432D0*x**11) - 
     &(143.D0*Ln2*dlog(x)**3)/(98304D0*x**10) - 
     &(55.D0*Ln2*dlog(x)**3)/(32768D0*x**9) - 
     &(Ln2*dlog(x)**3)/(512D0*x**8) - 
     &(7.D0*Ln2*dlog(x)**3)/(3072D0*x**7) - 
     &(Ln2*dlog(x)**3)/(384D0*x**6) - 
     &(Ln2*dlog(x)**3)/(384D0*x**5) + (Ln2*dlog(x)**3)/(24D0*x**3) + 
     &(5.D0*Ln2*dlog(x)**3)/(12D0*x**2) -
     &(5.D0*Ln2*dlog(x)**3)/(12D0*x) - 
     &(135330965.D0*dlog(x)**4)/(2.199023255552D12*x**21) - 
     &(1137235.D0*dlog(x)**4)/(1.7179869184D10*x**20) - 
     &(9821575.D0*dlog(x)**4)/(1.37438953472D11*x**19) - 
     &(1330665.D0*dlog(x)**4)/(1.7179869184D10*x**18) - 
     &(1448655.D0*dlog(x)**4)/(1.7179869184D10*x**17) - 
     &(37145.D0*dlog(x)**4)/(4.02653184D8*x**16) - 
     &(81719.D0*dlog(x)**4)/(8.05306368D8*x**15) - 
     &(11305.D0*dlog(x)**4)/(1.00663296D8*x**14) - 
     &(4199.D0*dlog(x)**4)/(3.3554432D7*x**13) - 
     &(221.D0*dlog(x)**4)/(1.572864D6*x**12) - 
     &(1001.D0*dlog(x)**4)/(6.291456D6*x**11) - 
     &(143.D0*dlog(x)**4)/(786432D0*x**10) - 
     &(55.D0*dlog(x)**4)/(262144D0*x**9) - dlog(x)**4/(4096D0*x**8) - 
     &(7.D0*dlog(x)**4)/(24576D0*x**7) - dlog(x)**4/(3072D0*x**6) - 
     &dlog(x)**4/(3072D0*x**5) + dlog(x)**4/(192D0*x**3) + 
     &(5.D0*dlog(x)**4)/(96D0*x**2) - (5.D0*dlog(x)**4)/(96D0*x) - 
     &(94952136543989.D0*Z3)/(6.11053587136512D15*x**21) - 
     &(6764418376921.D0*Z3)/(4.0577777270784D14*x**20) - 
     &(13489560895727.D0*Z3)/(7.51756715753472D14*x**19) - 
     &(3036250804199.D0*Z3)/(1.5661598244864D14*x**18) - 
     &(14903578333.D0*Z3)/(7.0866960384D11*x**17) - 
     &(2474055343.D0*Z3)/(1.0796138496D11*x**16) - 
     &(492609113.D0*Z3)/(1.962934272D10*x**15) - 
     &(149175265.D0*Z3)/(5.398069248D9*x**14) - 
     &(148336757.D0*Z3)/(4.84442112D9*x**13) - 
     &(3878969.D0*Z3)/(1.1354112D8*x**12) - 
     &(453149.D0*Z3)/(1.179648D7*x**11) - 
     &(449717.D0*Z3)/(1.032192D7*x**10) - 
     &(34333.D0*Z3)/(688128D0*x**9) - (97.D0*Z3)/(1680D0*x**8) - 
     &(173.D0*Z3)/(2560D0*x**7) - (77.D0*Z3)/(960D0*x**6) - 
     &(19.D0*Z3)/(192D0*x**5) - Z3/(6D0*x**4) - 
     &(5.D0*Z3)/(2D0*x**3) + (16.D0*Z3)/x**2 - 
     &(31.D0*Z3)/(2D0*x) + 
     &(405992895.D0*Ln2*Z3)/(1.7179869184D10*x**21) + 
     &(3411705.D0*Ln2*Z3)/(1.34217728D8*x**20) + 
     &(29464725.D0*Ln2*Z3)/(1.073741824D9*x**19) + 
     &(3991995.D0*Ln2*Z3)/(1.34217728D8*x**18) + 
     &(4345965.D0*Ln2*Z3)/(1.34217728D8*x**17) + 
     &(37145.D0*Ln2*Z3)/(1.048576D6*x**16) + 
     &(81719.D0*Ln2*Z3)/(2.097152D6*x**15) + 
     &(11305.D0*Ln2*Z3)/(262144D0*x**14) + 
     &(12597.D0*Ln2*Z3)/(262144D0*x**13) + 
     &(221.D0*Ln2*Z3)/(4096D0*x**12) + 
     &(1001.D0*Ln2*Z3)/(16384D0*x**11) + 
     &(143.D0*Ln2*Z3)/(2048D0*x**10) + 
     &(165.D0*Ln2*Z3)/(2048D0*x**9) + 
     &(3.D0*Ln2*Z3)/(32D0*x**8) + (7.D0*Ln2*Z3)/(64D0*x**7) + 
     &(Ln2*Z3)/(8D0*x**6) + (Ln2*Z3)/(8D0*x**5) - 
     &(2.D0*Ln2*Z3)/x**3 - (11.D0*Ln2*Z3)/x**2 + 
     &(11.D0*Ln2*Z3)/x + 
     &(405992895.D0*dlog(x)*Z3)/(3.4359738368D10*x**21) + 
     &(3411705.D0*dlog(x)*Z3)/(2.68435456D8*x**20) + 
     &(29464725.D0*dlog(x)*Z3)/(2.147483648D9*x**19) + 
     &(3991995.D0*dlog(x)*Z3)/(2.68435456D8*x**18) + 
     &(4345965.D0*dlog(x)*Z3)/(2.68435456D8*x**17) + 
     &(37145.D0*dlog(x)*Z3)/(2.097152D6*x**16) + 
     &(81719.D0*dlog(x)*Z3)/(4.194304D6*x**15) + 
     &(11305.D0*dlog(x)*Z3)/(524288D0*x**14) + 
     &(12597.D0*dlog(x)*Z3)/(524288D0*x**13) + 
     &(221.D0*dlog(x)*Z3)/(8192D0*x**12) + 
     &(1001.D0*dlog(x)*Z3)/(32768D0*x**11) + 
     &(143.D0*dlog(x)*Z3)/(4096D0*x**10) + 
     &(165.D0*dlog(x)*Z3)/(4096D0*x**9) + 
     &(3.D0*dlog(x)*Z3)/(64D0*x**8) +
     &(7.D0*dlog(x)*Z3)/(128D0*x**7) + 
     &(dlog(x)*Z3)/(16D0*x**6) + (dlog(x)*Z3)/(16D0*x**5) - 
     &(dlog(x)*Z3)/x**3 - (11.D0*dlog(x)*Z3)/(2D0*x**2) + 
     &(11.D0*dlog(x)*Z3)/(2D0*x)

         im=
     &(434103706992134839828235843.D0*Pi)
     &/(1.915236885191857D28*x**21) - 
     &(54219837136327.D0*Pi**3)/(4.888428697092096D16*x**21) + 
     &(725223186676418727763343653.D0*Pi)
     &/(2.9327064804500313D28*x**20) - 
     &(62224475103143.D0*Pi**3)/(5.193955490660352D16*x**20) + 
     &(129536292891028977423061.D0*Pi)
     &/(4.7787298035685694D24*x**19) - 
     &(15628310996357.D0*Pi**3)/(1.2028107452055552D16*x**19) + 
     &(154068287995292814552763.D0*Pi)
     &/(5.157994073693059D24*x**18) - 
     &(14189072890871.D0*Pi**3)/(1.002342287671296D16*x**18) + 
     &(34185062170424534959.D0*Pi)
     &/(1.0325133265421206D21*x**17) - 
     &(70304384317.D0*Pi**3)/(4.535485464576D13*x**17) + 
     &(643902295791345859.D0*Pi)/(1.7429424178515149D19*x**16) - 
     &(41281755287.D0*Pi**3)/(2.418335023104D13*x**16) + 
     &(361976028255874007.D0*Pi)/(8.714712089257574D18*x**15) - 
     &(159974251.D0*Pi**3)/(8.455716864D10*x**15) + 
     &(12829677820940707.D0*Pi)/(2.723347527892992D17*x**14) - 
     &(28063901.D0*Pi**3)/(1.3287555072D10*x**14) + 
     &(4970594385391.D0*Pi)/(9.208275664896D13*x**13) - 
     &(368539399.D0*Pi**3)/(1.5502147584D11*x**13) + 
     &(12610413510803.D0*Pi)/(2.014310301696D14*x**12) - 
     &(7852049.D0*Pi**3)/(2.906652672D9*x**12) + 
     &(567837091.D0*Pi)/(7.7070336D9*x**11) - 
     &(58571.D0*Pi**3)/(1.8874368D7*x**11) + 
     &(147000358439.D0*Pi)/(1.6647192576D12*x**10) - 
     &(2384453.D0*Pi**3)/(6.6060288D8*x**10) + 
     &(60122770109.D0*Pi)/(5.549064192D11*x**9) - 
     &(187525.D0*Pi**3)/(4.4040192D7*x**9) + 
     &(850063.D0*Pi)/(6.193152D6*x**8) -
     &(8773.D0*Pi**3)/(1.72032D6*x**8) + 
     &(4031237.D0*Pi)/(2.21184D7*x**7) - 
     &(507.D0*Pi**3)/(81920D0*x**7) + 
     &(32141.D0*Pi)/(122880D0*x**6) -
     &(461.D0*Pi**3)/(61440D0*x**6) + 
     &(16075.D0*Pi)/(36864D0*x**5) -
     &(103.D0*Pi**3)/(12288D0*x**5) + 
     &(1157.D0*Pi)/(1152D0*x**4) - Pi**3/(384D0*x**4) - 
     &(543.D0*Pi)/(128D0*x**3) + (13.D0*Pi**3)/(128D0*x**3) +
     &Pi/(4D0*x**2)- 
     &(9.D0*Pi**3)/(8D0*x**2) + (6.D0*Pi)/x +
     &(5.D0*Pi**3)/(6D0*x) - 
     &(12596657519154026723897.D0*Pi*Ln2)/
     &(9.483248589779447D23*x**21) + 
     &(405992895.D0*Pi**3*Ln2)/(2.74877906944D11*x**21) - 
     &(105327419789794072942003.D0*Pi*Ln2)/
     &(7.053166138648463D24*x**20) + 
     &(3411705.D0*Pi**3*Ln2)/(2.147483648D9*x**20) - 
     &(1451080559100734349107.D0*Pi*Ln2)/
     &(8.596656789488432D22*x**19) + 
     &(29464725.D0*Pi**3*Ln2)/(1.7179869184D10*x**19) - 
     &(294651073770071017513.D0*Pi*Ln2)/(1.53511728383722D22*x**18) + 
     &(3991995.D0*Pi**3*Ln2)/(2.147483648D9*x**18) - 
     &(628443167587826389.D0*Pi*Ln2)/(2.860213198525563D19*x**17) + 
     &(4345965.D0*Pi**3*Ln2)/(2.147483648D9*x**17) - 
     &(18402875124264109.D0*Pi*Ln2)/(7.262260074381312D17*x**16) + 
     &(37145.D0*Pi**3*Ln2)/(1.6777216D7*x**16) - 
     &(54049884731053.D0*Pi*Ln2)/(1.8339040591872D15*x**15) + 
     &(81719.D0*Pi**3*Ln2)/(3.3554432D7*x**15) - 
     &(2849555044307.D0*Pi*Ln2)/(8.233854959616D13*x**14) + 
     &(11305.D0*Pi**3*Ln2)/(4.194304D6*x**14) - 
     &(44136842613917.D0*Pi*Ln2)/(1.0742988275712D15*x**13) + 
     &(12597.D0*Pi**3*Ln2)/(4.194304D6*x**13) - 
     &(1658156437001.D0*Pi*Ln2)/(3.35718383616D13*x**12) + 
     &(221.D0*Pi**3*Ln2)/(65536D0*x**12) - 
     &(1194127681.D0*Pi*Ln2)/(1.98180864D10*x**11) + 
     &(1001.D0*Pi**3*Ln2)/(262144D0*x**11) - 
     &(5187176251.D0*Pi*Ln2)/(6.93633024D10*x**10) + 
     &(143.D0*Pi**3*Ln2)/(32768D0*x**10) - 
     &(146013793.D0*Pi*Ln2)/(1.54140672D9*x**9) + 
     &(165.D0*Pi**3*Ln2)/(32768D0*x**9) - 
     &(7403657.D0*Pi*Ln2)/(6.02112D7*x**8) + 
     &(3.D0*Pi**3*Ln2)/(512D0*x**8) - 
     &(202027.D0*Pi*Ln2)/(1.2288D6*x**7) + 
     &(7.D0*Pi**3*Ln2)/(1024D0*x**7) - 
     &(35041.D0*Pi*Ln2)/(153600D0*x**6) +
     &(Pi**3*Ln2)/(128D0*x**6) - 
     &(2059.D0*Pi*Ln2)/(6144D0*x**5) + (Pi**3*Ln2)/(128D0*x**5) - 
     &(5.D0*Pi*Ln2)/(8D0*x**4) - (179.D0*Pi*Ln2)/(16D0*x**3) - 
     &(Pi**3*Ln2)/(8D0*x**3) + (11.D0*Pi*Ln2)/(4D0*x**2) + 
     &(Pi**3*Ln2)/(4D0*x**2) + (9.D0*Pi*Ln2)/(2D0*x) - 
     &(Pi**3*Ln2)/(4D0*x) - 
     &(27244761678997.D0*Pi*Ln2**2)/(1.222107174273024D16*x**21) - 
     &(29787962752043.D0*Pi*Ln2**2)/(1.298488872665088D16*x**20) - 
     &(7073310593837.D0*Pi*Ln2**2)/(3.007026863013888D15*x**19) - 
     &(6012794194571.D0*Pi*Ln2**2)/(2.50585571917824D15*x**18) - 
     &(27544100377.D0*Pi*Ln2**2)/(1.133871366144D13*x**17) - 
     &(14701833347.D0*Pi*Ln2**2)/(6.04583755776D12*x**16) - 
     &(657531793.D0*Pi*Ln2**2)/(2.7481079808D11*x**15) - 
     &(98909981.D0*Pi*Ln2**2)/(4.3184553984D10*x**14) - 
     &(81075859.D0*Pi*Ln2**2)/(3.875536896D10*x**13) - 
     &(6346273.D0*Pi*Ln2**2)/(3.63331584D9*x**12) - 
     &(27733.D0*Pi*Ln2**2)/(2.359296D7*x**11) - 
     &(42113.D0*Pi*Ln2**2)/(1.6515072D8*x**10) + 
     &(13247.D0*Pi*Ln2**2)/(1.1010048D7*x**9) + 
     &(1487.D0*Pi*Ln2**2)/(430080D0*x**8) + 
     &(137.D0*Pi*Ln2**2)/(20480D0*x**7) + 
     &(151.D0*Pi*Ln2**2)/(15360D0*x**6) + 
     &(5.D0*Pi*Ln2**2)/(3072D0*x**5) - (13.D0*Pi*Ln2**2)/(96D0*x**4) - 
     &(119.D0*Pi*Ln2**2)/(32D0*x**3) + (27.D0*Pi*Ln2**2)/(2D0*x**2) - 
     &(6.D0*Pi*Ln2**2)/x + (135330965.D0*Pi*Ln2**3)/
     &(6.8719476736D10*x**21) + 
     &(1137235.D0*Pi*Ln2**3)/(5.36870912D8*x**20) + 
     &(9821575.D0*Pi*Ln2**3)/(4.294967296D9*x**19) + 
     &(1330665.D0*Pi*Ln2**3)/(5.36870912D8*x**18) + 
     &(1448655.D0*Pi*Ln2**3)/(5.36870912D8*x**17) + 
     &(37145.D0*Pi*Ln2**3)/(1.2582912D7*x**16) + 
     &(81719.D0*Pi*Ln2**3)/(2.5165824D7*x**15) + 
     &(11305.D0*Pi*Ln2**3)/(3.145728D6*x**14) + 
     &(4199.D0*Pi*Ln2**3)/(1.048576D6*x**13) + 
     &(221.D0*Pi*Ln2**3)/(49152D0*x**12) + 
     &(1001.D0*Pi*Ln2**3)/(196608D0*x**11) + 
     &(143.D0*Pi*Ln2**3)/(24576D0*x**10) + 
     &(55.D0*Pi*Ln2**3)/(8192D0*x**9) + (Pi*Ln2**3)/(128D0*x**8) + 
     &(7.D0*Pi*Ln2**3)/(768D0*x**7) + (Pi*Ln2**3)/(96D0*x**6) + 
     &(Pi*Ln2**3)/(96D0*x**5) - (Pi*Ln2**3)/(6D0*x**3) - 
     &(5.D0*Pi*Ln2**3)/(3D0*x**2) + (5.D0*Pi*Ln2**3)/(3D0*x) - 
     &(12596657519154026723897.D0*Pi*dlog(x))/
     &(1.8966497179558893D24*x**21) + 
     &(405992895.D0*Pi**3*dlog(x))/(5.49755813888D11*x**21) - 
     &(105327419789794072942003.D0*Pi*dlog(x))/
     &(1.4106332277296927D25*x**20) + 
     &(3411705.D0*Pi**3*dlog(x))/(4.294967296D9*x**20) - 
     &(1451080559100734349107.D0*Pi*dlog(x))/
     &(1.7193313578976864D23*x**19) + 
     &(29464725.D0*Pi**3*dlog(x))/(3.4359738368D10*x**19) - 
     &(294651073770071017513.D0*Pi*dlog(x))
     &/(3.07023456767444D22*x**18) + 
     &(3991995.D0*Pi**3*dlog(x))/(4.294967296D9*x**18) - 
     &(628443167587826389.D0*Pi*dlog(x))
     &/(5.720426397051126D19*x**17) + 
     &(4345965.D0*Pi**3*dlog(x))/(4.294967296D9*x**17) - 
     &(18402875124264109.D0*Pi*dlog(x))
     &/(1.4524520148762624D18*x**16) + 
     &(37145.D0*Pi**3*dlog(x))/(3.3554432D7*x**16) - 
     &(54049884731053.D0*Pi*dlog(x))/(3.6678081183744D15*x**15) + 
     &(81719.D0*Pi**3*dlog(x))/(6.7108864D7*x**15) - 
     &(2849555044307.D0*Pi*dlog(x))/(1.6467709919232D14*x**14) + 
     &(11305.D0*Pi**3*dlog(x))/(8.388608D6*x**14) - 
     &(44136842613917.D0*Pi*dlog(x))/(2.1485976551424D15*x**13) + 
     &(12597.D0*Pi**3*dlog(x))/(8.388608D6*x**13) - 
     &(1658156437001.D0*Pi*dlog(x))/(6.71436767232D13*x**12) + 
     &(221.D0*Pi**3*dlog(x))/(131072D0*x**12) - 
     &(1194127681.D0*Pi*dlog(x))/(3.96361728D10*x**11) + 
     &(1001.D0*Pi**3*dlog(x))/(524288D0*x**11) - 
     &(5187176251.D0*Pi*dlog(x))/(1.387266048D11*x**10) + 
     &(143.D0*Pi**3*dlog(x))/(65536D0*x**10) - 
     &(146013793.D0*Pi*dlog(x))/(3.08281344D9*x**9) + 
     &(165.D0*Pi**3*dlog(x))/(65536D0*x**9) - 
     &(7403657.D0*Pi*dlog(x))/(1.204224D8*x**8) + 
     &(3.D0*Pi**3*dlog(x))/(1024D0*x**8) - 
     &(202027.D0*Pi*dlog(x))/(2.4576D6*x**7) + 
     &(7.D0*Pi**3*dlog(x))/(2048D0*x**7) - 
     &(35041.D0*Pi*dlog(x))/(307200D0*x**6) +
     &(Pi**3*dlog(x))/(256D0*x**6)- 
     &(2059.D0*Pi*dlog(x))/(12288D0*x**5) +
     &(Pi**3*dlog(x))/(256D0*x**5) - 
     &(5.D0*Pi*dlog(x))/(16D0*x**4) - (179.D0*Pi*dlog(x))/(32D0*x**3) - 
     &(Pi**3*dlog(x))/(16D0*x**3) + (11.D0*Pi*dlog(x))/(8D0*x**2) + 
     &(Pi**3*dlog(x))/(8D0*x**2) + (9.D0*Pi*dlog(x))/(4D0*x) - 
     &(Pi**3*dlog(x))/(8D0*x) - 
     &(27244761678997.D0*Pi*Ln2*dlog(x))/(1.222107174273024D16*x**21) - 
     &(29787962752043.D0*Pi*Ln2*dlog(x))/(1.298488872665088D16*x**20) - 
     &(7073310593837.D0*Pi*Ln2*dlog(x))/(3.007026863013888D15*x**19) - 
     &(6012794194571.D0*Pi*Ln2*dlog(x))/(2.50585571917824D15*x**18) - 
     &(27544100377.D0*Pi*Ln2*dlog(x))/(1.133871366144D13*x**17) - 
     &(14701833347.D0*Pi*Ln2*dlog(x))/(6.04583755776D12*x**16) - 
     &(657531793.D0*Pi*Ln2*dlog(x))/(2.7481079808D11*x**15) - 
     &(98909981.D0*Pi*Ln2*dlog(x))/(4.3184553984D10*x**14) - 
     &(81075859.D0*Pi*Ln2*dlog(x))/(3.875536896D10*x**13) - 
     &(6346273.D0*Pi*Ln2*dlog(x))/(3.63331584D9*x**12) - 
     &(27733.D0*Pi*Ln2*dlog(x))/(2.359296D7*x**11) - 
     &(42113.D0*Pi*Ln2*dlog(x))/(1.6515072D8*x**10) + 
     &(13247.D0*Pi*Ln2*dlog(x))/(1.1010048D7*x**9) + 
     &(1487.D0*Pi*Ln2*dlog(x))/(430080D0*x**8) + 
     &(137.D0*Pi*Ln2*dlog(x))/(20480D0*x**7) + 
     &(151.D0*Pi*Ln2*dlog(x))/(15360D0*x**6) + 
     &(5.D0*Pi*Ln2*dlog(x))/(3072D0*x**5) - 
     &(13.D0*Pi*Ln2*dlog(x))/(96D0*x**4) - 
     &(119.D0*Pi*Ln2*dlog(x))/(32D0*x**3) + 
     &(27.D0*Pi*Ln2*dlog(x))/(2D0*x**2) - (6.D0*Pi*Ln2*dlog(x))/x + 
     &(405992895.D0*Pi*Ln2**2*dlog(x))/(1.37438953472D11*x**21) + 
     &(3411705.D0*Pi*Ln2**2*dlog(x))/(1.073741824D9*x**20) + 
     &(29464725.D0*Pi*Ln2**2*dlog(x))/(8.589934592D9*x**19) + 
     &(3991995.D0*Pi*Ln2**2*dlog(x))/(1.073741824D9*x**18) + 
     &(4345965.D0*Pi*Ln2**2*dlog(x))/(1.073741824D9*x**17) + 
     &(37145.D0*Pi*Ln2**2*dlog(x))/(8.388608D6*x**16) + 
     &(81719.D0*Pi*Ln2**2*dlog(x))/(1.6777216D7*x**15) + 
     &(11305.D0*Pi*Ln2**2*dlog(x))/(2.097152D6*x**14) + 
     &(12597.D0*Pi*Ln2**2*dlog(x))/(2.097152D6*x**13) + 
     &(221.D0*Pi*Ln2**2*dlog(x))/(32768D0*x**12) + 
     &(1001.D0*Pi*Ln2**2*dlog(x))/(131072D0*x**11) + 
     &(143.D0*Pi*Ln2**2*dlog(x))/(16384D0*x**10) + 
     &(165.D0*Pi*Ln2**2*dlog(x))/(16384D0*x**9) + 
     &(3.D0*Pi*Ln2**2*dlog(x))/(256D0*x**8) + 
     &(7.D0*Pi*Ln2**2*dlog(x))/(512D0*x**7) + 
     &(Pi*Ln2**2*dlog(x))/(64D0*x**6) + 
     &(Pi*Ln2**2*dlog(x))/(64D0*x**5) - 
     &(Pi*Ln2**2*dlog(x))/(4D0*x**3) - 
     &(5.D0*Pi*Ln2**2*dlog(x))/(2D0*x**2) + 
     &(5.D0*Pi*Ln2**2*dlog(x))/(2D0*x) - 
     &(27244761678997.D0*Pi*dlog(x)**2)/(4.888428697092096D16*x**21) - 
     &(29787962752043.D0*Pi*dlog(x)**2)/(5.193955490660352D16*x**20) - 
     &(7073310593837.D0*Pi*dlog(x)**2)/(1.2028107452055552D16*x**19) - 
     &(6012794194571.D0*Pi*dlog(x)**2)/(1.002342287671296D16*x**18) - 
     &(27544100377.D0*Pi*dlog(x)**2)/(4.535485464576D13*x**17) - 
     &(14701833347.D0*Pi*dlog(x)**2)/(2.418335023104D13*x**16) - 
     &(657531793.D0*Pi*dlog(x)**2)/(1.09924319232D12*x**15) - 
     &(98909981.D0*Pi*dlog(x)**2)/(1.72738215936D11*x**14) - 
     &(81075859.D0*Pi*dlog(x)**2)/(1.5502147584D11*x**13) - 
     &(6346273.D0*Pi*dlog(x)**2)/(1.453326336D10*x**12) - 
     &(27733.D0*Pi*dlog(x)**2)/(9.437184D7*x**11) - 
     &(42113.D0*Pi*dlog(x)**2)/(6.6060288D8*x**10) + 
     &(13247.D0*Pi*dlog(x)**2)/(4.4040192D7*x**9) + 
     &(1487.D0*Pi*dlog(x)**2)/(1.72032D6*x**8) + 
     &(137.D0*Pi*dlog(x)**2)/(81920D0*x**7) + 
     &(151.D0*Pi*dlog(x)**2)/(61440D0*x**6) + 
     &(5.D0*Pi*dlog(x)**2)/(12288D0*x**5) - 
     &(13.D0*Pi*dlog(x)**2)/(384D0*x**4)- 
     &(119.D0*Pi*dlog(x)**2)/(128D0*x**3) + 
     &(27.D0*Pi*dlog(x)**2)/(8D0*x**2) - 
     &(3.D0*Pi*dlog(x)**2)/(2D0*x) + 
     &(405992895.D0*Pi*Ln2*dlog(x)**2)/(2.74877906944D11*x**21) + 
     &(3411705.D0*Pi*Ln2*dlog(x)**2)/(2.147483648D9*x**20) + 
     &(29464725.D0*Pi*Ln2*dlog(x)**2)/(1.7179869184D10*x**19) + 
     &(3991995.D0*Pi*Ln2*dlog(x)**2)/(2.147483648D9*x**18) + 
     &(4345965.D0*Pi*Ln2*dlog(x)**2)/(2.147483648D9*x**17) + 
     &(37145.D0*Pi*Ln2*dlog(x)**2)/(1.6777216D7*x**16) + 
     &(81719.D0*Pi*Ln2*dlog(x)**2)/(3.3554432D7*x**15) + 
     &(11305.D0*Pi*Ln2*dlog(x)**2)/(4.194304D6*x**14) + 
     &(12597.D0*Pi*Ln2*dlog(x)**2)/(4.194304D6*x**13) + 
     &(221.D0*Pi*Ln2*dlog(x)**2)/(65536D0*x**12) + 
     &(1001.D0*Pi*Ln2*dlog(x)**2)/(262144D0*x**11) + 
     &(143.D0*Pi*Ln2*dlog(x)**2)/(32768D0*x**10) + 
     &(165.D0*Pi*Ln2*dlog(x)**2)/(32768D0*x**9) + 
     &(3.D0*Pi*Ln2*dlog(x)**2)/(512D0*x**8) + 
     &(7.D0*Pi*Ln2*dlog(x)**2)/(1024D0*x**7) + 
     &(Pi*Ln2*dlog(x)**2)/(128D0*x**6) + 
     &(Pi*Ln2*dlog(x)**2)/(128D0*x**5) - 
     &(Pi*Ln2*dlog(x)**2)/(8D0*x**3) - 
     &(5.D0*Pi*Ln2*dlog(x)**2)/(4D0*x**2) + 
     &(5.D0*Pi*Ln2*dlog(x)**2)/(4D0*x) + 
     &(135330965.D0*Pi*dlog(x)**3)/(5.49755813888D11*x**21) + 
     &(1137235.D0*Pi*dlog(x)**3)/(4.294967296D9*x**20) + 
     &(9821575.D0*Pi*dlog(x)**3)/(3.4359738368D10*x**19) + 
     &(1330665.D0*Pi*dlog(x)**3)/(4.294967296D9*x**18) + 
     &(1448655.D0*Pi*dlog(x)**3)/(4.294967296D9*x**17) + 
     &(37145.D0*Pi*dlog(x)**3)/(1.00663296D8*x**16) + 
     &(81719.D0*Pi*dlog(x)**3)/(2.01326592D8*x**15) + 
     &(11305.D0*Pi*dlog(x)**3)/(2.5165824D7*x**14) + 
     &(4199.D0*Pi*dlog(x)**3)/(8.388608D6*x**13) + 
     &(221.D0*Pi*dlog(x)**3)/(393216D0*x**12) + 
     &(1001.D0*Pi*dlog(x)**3)/(1.572864D6*x**11) + 
     &(143.D0*Pi*dlog(x)**3)/(196608D0*x**10) + 
     &(55.D0*Pi*dlog(x)**3)/(65536D0*x**9) +
     &(Pi*dlog(x)**3)/(1024D0*x**8)+ 
     &(7.D0*Pi*dlog(x)**3)/(6144D0*x**7) +
     &(Pi*dlog(x)**3)/(768D0*x**6) + 
     &(Pi*dlog(x)**3)/(768D0*x**5) - (Pi*dlog(x)**3)/(48D0*x**3) - 
     &(5.D0*Pi*dlog(x)**3)/(24D0*x**2) +
     &(5.D0*Pi*dlog(x)**3)/(24D0*x) - 
     &(405992895.D0*Pi*Z3)/(3.4359738368D10*x**21) - 
     &(3411705.D0*Pi*Z3)/(2.68435456D8*x**20) - 
     &(29464725.D0*Pi*Z3)/(2.147483648D9*x**19) - 
     &(3991995.D0*Pi*Z3)/(2.68435456D8*x**18) - 
     &(4345965.D0*Pi*Z3)/(2.68435456D8*x**17) - 
     &(37145.D0*Pi*Z3)/(2.097152D6*x**16) - 
     &(81719.D0*Pi*Z3)/(4.194304D6*x**15) - 
     &(11305.D0*Pi*Z3)/(524288D0*x**14) - 
     &(12597.D0*Pi*Z3)/(524288D0*x**13) - 
     &(221.D0*Pi*Z3)/(8192D0*x**12) - 
     &(1001.D0*Pi*Z3)/(32768D0*x**11) - 
     &(143.D0*Pi*Z3)/(4096D0*x**10) - (165.D0*Pi*Z3)/(4096D0*x**9) - 
     &(3.D0*Pi*Z3)/(64D0*x**8) - (7.D0*Pi*Z3)/(128D0*x**7) - 
     &(Pi*Z3)/(16D0*x**6) - (Pi*Z3)/(16D0*x**5) + 
     &(Pi*Z3)/x**3 + (11.D0*Pi*Z3)/(2D0*x**2) - 
     &(11.D0*Pi*Z3)/(2D0*x)

      endif
      B1SM=(1D0,0D0)*re+(0D0,1D0)*im
      end
C-}}}
C-{{{  SM  NLO-Amplitude for gg -> A

      function B1SMA(x)
      implicit none
      double complex B1SMA
      double precision x,re,im
      call CalcF0AB1A(x,re,im)
      B1SMA = 3/2.d0*( (1.d0,0.d0) * re + (0.d0,1.d0) * im )
      end

C-{{{ subroutine CalcF0AB1A

	subroutine CalcF0AB1A(tau, ReF0AB1A, ImF0AB1A)
!--------------------------------------------------------
!This routine calculates ReF0AB1A, ImF0AB1A from
!the analytic formulas given in hep-ph/0509189 Eq. (3.8)
!by Harlander, Kant.
!ReF0AB1A, ImF0AB1A are the real and imaginary
!part of the virtual two-loop contributions
!in gluon fusion for pseudoscalars.
!For small tau an interpolation is used, for large
!tau the analytic formulas are expanded in the limit
!1/tau -> 0.
!NOTE: For tau approx 1 F0AB1A diverges. Thus
!the routine gives 0 for the real and imaginary part!
!January 2012 - S. Liebler
!--------------------------------------------------------
	implicit none
	double precision tau, ImF0AB1A, ReF0AB1A

	integer i1, i2
        double precision tauimval(161), imvalues(161)
        double precision taureval(332), revalues(332)

!imaginary part
!stepsize: 1-2 in 0.02, 2-5 in 0.05, 5-10 in 0.01
	data tauimval /1.00000001D0,1.02D0,1.04D0,
     &    1.06D0,1.08D0,1.1D0,1.12D0,1.14D0,
     &    1.16D0,1.18D0,1.2D0,1.22D0,1.24D0,1.26D0,
     &    1.28D0,1.3D0,1.32D0,1.34D0,1.36D0,1.38D0,1.4D0,
     &    1.42D0,1.44D0,1.46D0,1.48D0,1.5D0,1.52D0,1.54D0,
     &    1.56D0,1.58D0,1.6D0,1.62D0,1.64D0,1.66D0,
     &    1.68D0,1.7D0,1.72D0,1.74D0,1.76D0,1.78D0,
     &    1.8D0,1.82D0,1.84D0,1.86D0,1.88D0,1.9D0,1.92D0,
     &    1.94D0,1.96D0,1.98D0,2.D0,2.05D0,2.1D0,2.15D0,
     &    2.2D0,2.25D0,2.3D0,2.35D0,2.4D0,2.45D0,2.5D0,
     &    2.55D0,2.6D0,2.65D0,2.7D0,2.75D0,2.8D0,
     &    2.85D0,2.9D0,2.95D0,3.D0,3.05D0,3.1D0,3.15D0,3.2D0,
     &    3.25D0,3.3D0,3.35D0,3.4D0,3.45D0,3.5D0,3.55D0,
     &    3.6D0,3.65D0,3.7D0,3.75D0,3.8D0,3.85D0,3.9D0,
     &    3.95D0,4.D0,4.05D0,4.1D0,4.15D0,4.2D0,
     &    4.25D0,4.3D0,4.35D0,4.4D0,4.45D0,4.5D0,4.55D0,4.6D0,
     &    4.65D0,4.7D0,4.75D0,4.8D0,4.85D0,4.9D0,4.95D0,
     &    5.D0,5.1D0,5.2D0,5.3D0,5.4D0,5.5D0,5.6D0,5.7D0,
     &    5.8D0,5.9D0,6.D0,6.1D0,6.2D0,6.3D0,6.4D0,
     &    6.5D0,6.6D0,6.7D0,6.8D0,6.9D0,7.D0,7.1D0,7.2D0,7.3D0,
     &    7.4D0,7.5D0,7.6D0,7.7D0,7.8D0,7.9D0,8.D0,8.1D0,
     &    8.2D0,8.3D0,8.4D0,8.5D0,8.6D0,8.7D0,8.8D0,
     &    8.9D0,9.D0,9.1D0,9.2D0,9.3D0,9.4D0,9.5D0,
     &    9.6D0,9.7D0,9.8D0,9.9D0,10.D0/

        data imvalues /41.338D0,36.2655D0,34.2029D0,32.6235D0,
     &    31.2935D0,30.1238D0,29.0694D0,28.1037D0,27.2096D0,
     &    26.3751D0,25.5916D0,24.8525D0,24.1528D0,
     &    23.4882D0,22.8555D0,22.2518D0,21.6747D0,
     &    21.1222D0,20.5924D0,20.0839D0,19.5952D0,
     &    19.125D0,18.6723D0,18.236D0,17.8153D0,
     &    17.4092D0,17.017D0,16.638D0,16.2716D0,
     &    15.9171D0,15.574D0,15.2417D0,14.9197D0,
     &    14.6076D0,14.305D0,14.0115D0,13.7266D0,
     &    13.45D0,13.1813D0,12.9204D0,12.6667D0,
     &    12.4202D0,12.1804D0,11.9471D0,11.7202D0,
     &    11.4992D0,11.2842D0,11.0747D0,10.8707D0,
     &    10.6719D0,10.4781D0,10.0147D0,9.57917D0,
     &    9.16941D0,8.78334D0,8.41914D0,8.07518D0,
     &    7.74996D0,7.44214D0,7.15049D0,6.87388D0,
     &    6.61131D0,6.36182D0,6.12458D0,5.89878D0,
     &    5.68371D0,5.4787D0,5.28313D0,5.09644D0,
     &    4.9181D0,4.74763D0,4.58457D0,4.4285D0,
     &    4.27904D0,4.13582D0,3.9985D0,3.86677D0,
     &    3.74034D0,3.61892D0,3.50227D0,3.39013D0,
     &    3.28229D0,3.17854D0,3.07866D0,2.98249D0,
     &    2.88983D0,2.80053D0,2.71444D0,2.63139D0,
     &    2.55126D0,2.47391D0,2.39922D0,2.32708D0,
     &    2.25737D0,2.18999D0,2.12484D0,2.06182D0,
     &    2.00085D0,1.94185D0,1.88472D0,1.82941D0,
     &    1.77582D0,1.72391D0,1.67359D0,1.62481D0,
     &    1.57752D0,1.53164D0,1.48713D0,1.44395D0,
     &    1.40203D0,1.36133D0,1.28342D0,1.2099D0,
     &    1.14045D0,1.07479D0,1.01268D0,0.95387D0,
     &    0.898153D0,0.845327D0,0.79521D0,0.747632D0,
     &    0.702438D0,0.659482D0,0.618631D0,0.57976D0,
     &    0.542755D0,0.507506D0,0.473916D0,
     &    0.441891D0,0.411343D0,0.382193D0,0.354365D0,
     &    0.327787D0,0.302394D0,0.278125D0,
     &    0.25492D0,0.232726D0,0.211491D0,0.191167D0,
     &    0.17171D0,0.153077D0,0.135227D0,
     &    0.118124D0,0.101732D0,0.0860164D0,0.0709467D0,
     &    0.0564929D0,0.0426266D0,0.0293213D0,
     &    0.0165516D0,0.00429379D0,-0.0074749D0,
     &    -0.0187759D0,-0.0296294D0,-0.0400549D0,
     &    -0.0500706D0,-0.0596938D0,-0.0689412D0,
     &    -0.0778283D0,-0.0863702D0,-0.094581D0/

!real part
!stepsize: 0-1 in 0.01, 1-2 in 0.02, 2-20 in 0.1
	data taureval /0.D0,0.01D0,0.02D0,0.03D0,
     &    0.04D0,0.05D0,0.06D0,0.07D0,
     &    0.08D0,0.09D0,0.1D0,0.11D0,0.12D0,0.13D0,0.14D0,0.15D0,
     &    0.16D0,0.17D0,0.18D0,0.19D0,0.2D0,0.21D0,0.22D0,0.23D0,
     &    0.24D0,0.25D0,0.26D0,0.27D0,0.28D0,0.29D0,0.3D0,0.31D0,
     &    0.32D0,0.33D0,0.34D0,0.35D0,0.36D0,0.37D0,0.38D0,0.39D0,
     &    0.4D0,0.41D0,0.42D0,0.43D0,0.44D0,0.45D0,0.46D0,0.47D0,
     &    0.48D0,0.49D0,0.5D0,0.51D0,0.52D0,0.53D0,0.54D0,0.55D0,
     &    0.56D0,0.57D0,0.58D0,0.59D0,0.6D0,0.61D0,0.62D0,0.63D0,
     &    0.64D0,0.65D0,0.66D0,0.67D0,0.68D0,0.69D0,0.7D0,0.71D0,
     &    0.72D0,0.73D0,0.74D0,0.75D0,0.76D0,0.77D0,0.78D0,0.79D0,
     &    0.8D0,0.81D0,0.82D0,0.83D0,0.84D0,0.85D0,0.86D0,0.87D0,
     &    0.88D0,0.89D0,0.9D0,0.91D0,0.92D0,0.93D0,0.94D0,0.95D0,
     &    0.96D0,0.97D0,0.98D0,0.99D0,0.9999D0,1.0001D0,1.02D0,
     &    1.04D0,1.06D0,1.08D0,1.1D0,1.12D0,1.14D0,
     &    1.16D0,1.18D0,1.2D0,1.22D0,1.24D0,1.26D0,1.28D0,1.3D0,
     &    1.32D0,1.34D0,1.36D0,1.38D0,1.4D0,1.42D0,1.44D0,1.46D0,
     &    1.48D0,1.5D0,1.52D0,1.54D0,1.56D0,1.58D0,1.6D0,1.62D0,
     &    1.64D0,1.66D0,1.68D0,1.7D0,1.72D0,1.74D0,1.76D0,1.78D0,
     &    1.8D0,1.82D0,1.84D0,1.86D0,1.88D0,1.9D0,1.92D0,1.94D0,
     &    1.96D0,1.98D0,2.D0,2.1D0,2.2D0,2.3D0,
     &    2.4D0,2.5D0,2.6D0,2.7D0,2.8D0,2.9D0,3.D0,
     &    3.1D0,3.2D0,3.3D0,3.4D0,3.5D0,
     &    3.6D0,3.7D0,3.8D0,3.9D0,4.D0,4.1D0,
     &    4.2D0,4.3D0,4.4D0,4.5D0,4.6D0,
     &    4.7D0,4.8D0,4.9D0,5.D0,5.1D0,5.2D0,
     &    5.3D0,5.4D0,5.5D0,5.6D0,5.7D0,
     &    5.8D0,5.9D0,6.D0,6.1D0,6.2D0,6.3D0,
     &    6.4D0,6.5D0,6.6D0,6.7D0,6.8D0,
     &    6.9D0,7.D0,7.1D0,7.2D0,7.3D0,7.4D0,
     &    7.5D0,7.6D0,7.7D0,7.8D0,7.9D0,
     &    8.D0,8.1D0,8.2D0,8.3D0,8.4D0,8.5D0,
     &    8.6D0,8.7D0,8.8D0,8.9D0,9.D0,9.1D0,
     &    9.2D0,9.3D0,9.4D0,9.5D0,9.6D0,
     &    9.7D0,9.8D0,9.9D0,10.D0,10.1D0,
     &    10.2D0,10.3D0,10.4D0,10.5D0,10.6D0,
     &    10.7D0,10.8D0,10.9D0,11.D0,11.1D0,
     &    11.2D0,11.3D0,11.4D0,11.5D0,
     &    11.6D0,11.7D0,11.8D0,11.9D0,12.D0,
     &    12.1D0,12.2D0,12.3D0,12.4D0,
     &    12.5D0,12.6D0,12.7D0,12.8D0,12.9D0,
     &    13.D0,13.1D0,13.2D0,13.3D0,
     &    13.4D0,13.5D0,13.6D0,13.7D0,13.8D0,
     &    13.9D0,14.D0,14.1D0,14.2D0,
     &    14.3D0,14.4D0,14.5D0,14.6D0,14.7D0,
     &    14.8D0,14.9D0,15.D0,15.1D0,
     &    15.2D0,15.3D0,15.4D0,15.5D0,15.6D0,
     &    15.7D0,15.8D0,15.9D0,16.D0,
     &    16.1D0,16.2D0,16.3D0,16.4D0,16.5D0,
     &    16.6D0,16.7D0,16.8D0,16.9D0,
     &    17.D0,17.1D0,17.2D0,17.3D0,17.4D0,
     &    17.5D0,17.6D0,17.7D0,17.8D0,
     &    17.9D0,18.D0,18.1D0,18.2D0,18.3D0,
     &    18.4D0,18.5D0,18.6D0,18.7D0,
     &    18.8D0,18.9D0,19.D0,19.1D0,19.2D0,
     &    19.3D0,19.4D0,19.5D0,19.6D0,
     &    19.7D0,19.8D0,19.9D0,20.D0/

        data revalues /6.00000D0,6.04086D0,6.08234D0,
     &    6.12445D0,6.16722D0,
     &    6.21065D0,6.25476D0,6.29957D0,6.3451D0,6.39137D0,6.4384D0,
     &    6.4862D0,6.5348D0,6.58421D0,6.63447D0,6.68559D0,6.73761D0,
     &    6.79053D0,6.8444D0,6.89923D0,6.95506D0,7.01191D0,7.06982D0,
     &    7.12881D0,7.18893D0,7.2502D0,7.31267D0,7.37636D0,7.44133D0,
     &    7.50761D0,7.57524D0,7.64428D0,7.71476D0,7.78674D0,7.86027D0,
     &    7.93541D0,8.01221D0,8.09074D0,8.17105D0,8.25323D0,8.33733D0,
     &    8.42343D0,8.51161D0,8.60196D0,8.69457D0,8.78952D0,8.88692D0,
     &    8.98687D0,9.08948D0,9.19488D0,9.30318D0,9.41453D0,9.52906D0,
     &    9.64694D0,9.76832D0,9.89338D0,10.0223D0,10.1553D0,10.2926D0,
     &    10.4344D0,10.581D0,10.7326D0,10.8896D0,11.0522D0,11.2209D0,
     &    11.396D0,11.5778D0,11.767D0,11.9639D0,12.1692D0,12.3834D0,
     &    12.6072D0,12.8413D0,13.0867D0,13.3442D0,13.6149D0,13.9D0,
     &    14.2009D0,14.519D0,14.8562D0,15.2144D0,15.5962D0,16.0042D0,
     &    16.4417D0,16.9127D0,17.4217D0,17.9746D0,18.5783D0,19.2417D0,
     &    19.9759D0,20.7955D0,21.7197D0,22.7749D0,23.9984D0,25.4454D0,
     &    27.2026D0,29.4169D0,32.3671D0,36.6893D0,44.4517D0,72.4041D0,
     &    71.2894D0,32.1755D0,23.3255D0,18.2523D0,14.7286D0,12.0565D0,
     &    9.92512D0,8.16812D0,6.68606D0,5.41455D0,4.30946D0,3.33917D0,
     &    2.48023D0,1.71473D0,1.02868D0,0.410947D0,-0.1475D0,-0.65408D0,
     &    -1.11496D0,-1.53535D0,-1.91963D0,-2.2716D0,-2.59451D0,
     &    -2.89118D0,-3.1641D0,-3.41544D0,-3.6471D0,-3.86081D0,
     &    -4.05807D0,-4.24024D0,-4.40853D0,-4.56405D0,-4.70777D0,
     &    -4.8406D0,-4.96335D0,-5.07676D0,-5.1815D0,-5.27818D0,
     &    -5.36738D0,-5.4496D0,-5.52533D0,-5.59499D0,-5.659D0,
     &    -5.71772D0,-5.7715D0,-5.82066D0,-5.86549D0,-5.90626D0,
     &    -5.94323D0,-5.97664D0,
     &    -6.0067D0,-6.11352D0,-6.16227D0,-6.16813D0,-6.14218D0,
     &    -6.09262D0,-6.0256D0,-5.94577D0,-5.85667D0,-5.76101D0,
     &    -5.66088D0,-5.55789D0,-5.4533D0,-5.34807D0,-5.24295D0,
     &    -5.13852D0,-5.03521D0,-4.93338D0,-4.83326D0,-4.73504D0,
     &    -4.63887D0,-4.54482D0,-4.45296D0,-4.36332D0,-4.27591D0,
     &    -4.19072D0,-4.10774D0,-4.02694D0,-3.94828D0,-3.87172D0,
     &    -3.79721D0,-3.72471D0,-3.65417D0,-3.58552D0,-3.51873D0,
     &    -3.45372D0,-3.39046D0,-3.32889D0,-3.26895D0,-3.21059D0,
     &    -3.15377D0,-3.09843D0,-3.04453D0,-2.99202D0,-2.94086D0,
     &    -2.891D0,-2.8424D0,-2.79502D0,-2.74882D0,
     &    -2.70376D0,-2.65981D0,
     &    -2.61693D0,-2.57508D0,-2.53424D0,-2.49436D0,-2.45543D0,
     &    -2.41741D0,-2.38027D0,-2.34399D0,-2.30853D0,-2.27388D0,
     &    -2.24001D0,-2.20689D0,-2.17451D0,-2.14284D0,-2.11185D0,
     &    -2.08154D0,-2.05188D0,-2.02284D0,-1.99442D0,-1.9666D0,
     &    -1.93935D0,-1.91266D0,-1.88652D0,-1.86091D0,-1.83582D0,
     &    -1.81123D0,-1.78713D0,-1.7635D0,-1.74033D0,-1.71761D0,
     &    -1.69533D0,-1.67348D0,-1.65204D0,-1.63101D0,-1.61037D0,
     &    -1.59011D0,-1.57023D0,-1.55071D0,-1.53154D0,-1.51272D0,
     &    -1.49424D0,-1.47609D0,-1.45826D0,-1.44075D0,-1.42354D0,
     &    -1.40663D0,-1.39D0,-1.37367D0,-1.35761D0,-1.34182D0,
     &    -1.3263D0,-1.31104D0,-1.29603D0,-1.28126D0,-1.26674D0,
     &    -1.25246D0,-1.2384D0,-1.22457D0,-1.21096D0,-1.19757D0,
     &    -1.18439D0,-1.17141D0,-1.15864D0,-1.14606D0,-1.13368D0,
     &    -1.12149D0,-1.10948D0,-1.09766D0,-1.08601D0,-1.07454D0,
     &    -1.06323D0,-1.0521D0,-1.04112D0,-1.03031D0,-1.01966D0,
     &    -1.00916D0,-0.998807D0,-0.988605D0,-0.978548D0,-0.968633D0,
     &    -0.958858D0,-0.949219D0,-0.939714D0,-0.930341D0,-0.921097D0,
     &    -0.91198D0,-0.902987D0,-0.894116D0,-0.885364D0,-0.87673D0,
     &    -0.868211D0,-0.859805D0,-0.85151D0,-0.843325D0,-0.835246D0,
     &    -0.827273D0,-0.819403D0,-0.811634D0,-0.803965D0,-0.796394D0,
     &    -0.788919D0,-0.781539D0,-0.774252D0,-0.767056D0,-0.759949D0,
     &    -0.752931D0,-0.746D0,-0.739153D0,-0.732391D0,-0.725711D0,
     &    -0.719112D0,-0.712593D0,-0.706152D0,-0.699788D0,-0.6935D0,
     &    -0.687286D0,-0.681146D0,-0.675078D0,-0.669082D0,-0.663155D0,
     &    -0.657296D0,-0.651506D0,-0.645782D0,-0.640124D0,-0.63453D0,
     &    -0.629D0,-0.623532D0,-0.618126D0,-0.612781D0,-0.607495D0/

!imaginary part
!case 1 - tau < 1 - since +inf at tau=1 starting at 1.00000001!
         if (tau .Le. 1.00000001D0) then
	  ImF0AB1A = 0.D0
!case 2 - tau > 10
	 else if (tau .Ge. 10.D0) then
	  ImF0AB1A = 1.4547052D0 * (tau+0.33639762D0)*(tau+20.615565D0)
     &    *(tau**2 -0.28305868D0 * tau+0.15294809D0)
     &    -0.3317344D0*(tau-1.505808D0)
     &    *(tau-0.4659325D0)*(tau**2+0.3933732D0 * tau+0.09980123D0)
     &    * (dlog(tau**2))**2
     &    -2.0330828D0 *(tau-4.8936094D0)* (tau-0.12752904D0)
     &    *(tau**2+0.18064115D0*tau+0.030952908D0) * dlog(tau**2)
     &    +(0.05454153912482D0 * tau**4-0.005454153912482D0 * tau**2
     &    -0.005454153912482D0 *tau-0.005113269292952D0)
     &    * (dlog(tau**2))**3
	  ImF0AB1A = ImF0AB1A/(tau**5)
!case 3 - tau in between
	 else
         do i1 = 1,161
         if ((tauimval(i1).Le.tau).And.(tauimval(i1+1).Ge.tau)) i2 = i1
         end do
	  ImF0AB1A = (imvalues(i2+1) - imvalues(i2))
     &       /(tauimval(i2+1)-tauimval(i2))
     &       * (tau - tauimval(i2)) + imvalues(i2)
	 end if

!real part
!case 1 - tau > 20
	 if (tau .Ge. 20.D0) then
	  ReF0AB1A = -20.058796D0 * (tau-1.2645290D0) 
     &    * (tau+0.37673030D0)
     &    * (tau**2-0.10701177D0 * tau+0.17993873D0)
     &    +0.017599056D0 * (tau-1.5058082D0)
     &    * (tau-0.4659325D0)* (tau**2+0.39337324D0* tau+0.09980123D0)
     &    * (dlog(tau**2))**3
     &    +0.50448219D0* (tau-1.6817409D0)* (tau+0.29285266D0)
     &    * (tau**2-0.16346067D0 *tau+0.116729153D0) *(dlog(tau**2))**2
     &    -1.62108930D0* (tau+0.54173752D0)* (tau+2.30939928D0)
     &    * (tau**2-0.32685145D0* tau+0.33084765D0) *dlog(tau**2)
     &    +(-0.0021701388888889D0 *tau**4+0.00021701388888889D0*tau**2
     &    +0.00021701388888889D0 *tau+0.00020345052083333D0)
     &    *(dlog(tau**2))**4
	  ReF0AB1A = ReF0AB1A/(tau**5)
!case 2 - tau between 0 and 20
	 else
         do i1 = 1,332
          if ((taureval(i1).Le.tau).And.(taureval(i1+1).Ge.tau)) i2 = i1
         end do
	  ReF0AB1A = (revalues(i2+1) - revalues(i2))
     &       /(taureval(i2+1)-taureval(i2))
     &       * (tau - taureval(i2)) + revalues(i2)
	 end if

!check if tau was too close to 1 - namely between 0.999 and 1.001 - divergence!
         if ((0.999d0 .Le. tau).And.(1.001D0 .Ge. tau)) ReF0AB1A = 0.D0

	end

C-}}}

C-}}}
